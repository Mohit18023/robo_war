{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport spriteImage from './Images/background.png';\nimport Classes from \"./classes.js\";\nimport { Center, Flex, position } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Sprite {\n  constructor({\n    position,\n    velocity,\n    color = 'red',\n    offset = {\n      x: 0,\n      y: 0\n    }\n  }) {\n    this.position = position;\n    this.velocity = velocity;\n    this.height = 150;\n    this.width = 50;\n    this.attackbox = {\n      position: {\n        x: this.position.x,\n        y: this.position.y\n      },\n      offset,\n      width: 100,\n      height: 50\n    };\n    this.isAttacking = '';\n    this.color = color;\n    this.health = 100;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.position.x, this.position.y, 50, this.height);\n    //attack box\n    if (this.isAttacking) {\n      ctx.fillStyle = 'green';\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y, this.attackbox.width, this.attackbox.height);\n    }\n  }\n  update(ctx) {\n    this.draw();\n    // this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\n    // this.attackbox.position.y = this.position.y;\n\n    // this.position.x += this.velocity.x;\n    // this.position.y += this.velocity.y;\n    // if (this.position.y + this.height >= ctx.height) {\n    //   this.velocity.y = 0;\n    //   this.position.y = ctx.height - this.height;\n    // } else {\n    //   this.velocity.y += gravity;\n    // }\n  }\n  // attack() {\n  //   this.isAttacking = true\n  //   setTimeout(() => {\n  //     this.isAttacking = false\n  //   }, 100);\n  // }\n}\n\nclass Fighter {\n  constructor({\n    position,\n    velocity,\n    color = 'red',\n    offset = {\n      x: 0,\n      y: 0\n    }\n  }) {\n    this.position = position;\n    this.velocity = velocity;\n    this.height = 150;\n    this.width = 50;\n    this.attackbox = {\n      position: {\n        x: this.position.x,\n        y: this.position.y\n      },\n      offset,\n      width: 100,\n      height: 50\n    };\n    this.isAttacking = '';\n    this.color = color;\n    this.health = 100;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.position.x, this.position.y, 50, this.height);\n    //attack box\n    if (this.isAttacking) {\n      ctx.fillStyle = 'green';\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y, this.attackbox.width, this.attackbox.height);\n    }\n  }\n  update(ctx) {\n    this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\n    this.attackbox.position.y = this.position.y;\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n    if (this.position.y + this.height >= ctx.height) {\n      this.velocity.y = 0;\n      this.position.y = ctx.height - this.height;\n    } else {\n      this.velocity.y += gravity;\n    }\n  }\n  attack() {\n    this.isAttacking = true;\n    setTimeout(() => {\n      this.isAttacking = false;\n    }, 100);\n  }\n}\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  let player;\n  let enemy;\n  let backgroundImage;\n  let timer = 60;\n  let timerId;\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    }\n  };\n  let lastkey = ''; // Initialize lastkey with an empty string\n\n  function determineWinner({\n    player,\n    enemy,\n    timerId\n  }) {\n    clearTimeout(timerId);\n    document.querySelector('#displayText').style.display = 'flex';\n    if (player.health === enemy.health) {\n      document.querySelector('#displayText').innerHTML = 'Tie';\n    } else if (player.health > enemy.health) {\n      document.querySelector('#displayText').innerHTML = 'Player 1 Wins!!';\n    } else if (enemy.health > player.health) {\n      document.querySelector('#displayText').innerHTML = 'Player 2 Wins!!';\n    }\n  }\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 576;\n    backgroundImage = new Image();\n    backgroundImage.src = spriteImage;\n    player = new Fighter({\n      position: {\n        x: 150,\n        y: 425\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      offset: {\n        x: 0,\n        y: 0\n      }\n    });\n    enemy = new Fighter({\n      position: {\n        x: 450,\n        y: 425\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      offset: {\n        x: 50,\n        y: 0\n      },\n      color: 'blue'\n    });\n    backgroundImage.onload = () => {\n      // Draw the background image\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n\n      // Draw the initial sprites\n      player.draw(ctx);\n      enemy.draw(ctx);\n    };\n\n    // Event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    function handleKeyDown(event) {\n      switch (event.key) {\n        case 'd':\n          keys.d.pressed = true;\n          lastkey = 'd';\n          break;\n        case 'a':\n          keys.a.pressed = true;\n          lastkey = 'a';\n          break;\n        case ' ':\n          player.attack();\n          break;\n        case 'ArrowRight':\n          keys.ArrowRight.pressed = true;\n          enemy.lastkey = 'ArrowRight';\n          break;\n        case 'ArrowLeft':\n          keys.ArrowLeft.pressed = true;\n          enemy.lastkey = 'ArrowLeft';\n          break;\n        case 'ArrowDown':\n          enemy.isAttacking = true;\n          break;\n      }\n    }\n    function handleKeyUp(event) {\n      switch (event.key) {\n        case 'd':\n          keys.d.pressed = false;\n          break;\n        case 'a':\n          keys.a.pressed = false;\n          break;\n        case 'ArrowRight':\n          keys.ArrowRight.pressed = false;\n          enemy.lastkey = 'ArrowRight';\n          break;\n        case 'ArrowLeft':\n          keys.ArrowLeft.pressed = false;\n          enemy.lastkey = 'ArrowLeft';\n          break;\n      }\n    }\n    function decreaseTimer() {\n      if (timer > 0 && player.health > 0 && enemy.health > 0) {\n        timerId = setTimeout(() => {\n          timer--;\n          document.querySelector('#timer').innerHTML = timer;\n          decreaseTimer(); // Call itself for the next second\n        }, 1000);\n      }\n      if (player.health <= 0 || enemy.health <= 0) {\n        determineWinner({\n          player,\n          enemy,\n          timerId\n        });\n      }\n    }\n    decreaseTimer(); // Start the countdown\n  }, []);\n  const gravity = 0.007;\n  function rectangularCollision({\n    rectangle1,\n    rectangle2\n  }) {\n    return rectangle1.attackbox.position.x + rectangle1.attackbox.width >= rectangle2.position.x && rectangle1.attackbox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackbox.position.y + rectangle1.attackbox.height >= rectangle2.position.y && rectangle1.attackbox.position.y <= rectangle2.position.y + rectangle2.height;\n  }\n  function animate() {\n    const canvas = canvasRef.current;\n    if (canvas && player && enemy) {\n      const ctx = canvas.getContext('2d');\n\n      // Clear the canvas\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw the background image\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n\n      // Update and draw the sprites\n      player.update(canvas);\n      player.draw(ctx);\n      enemy.update(canvas);\n      enemy.draw(ctx);\n      player.velocity.x = 0;\n      enemy.velocity.x = 0;\n      if (keys.a.pressed && lastkey === 'a') {\n        player.velocity.x = -5;\n      } else if (keys.d.pressed && lastkey === 'd') {\n        player.velocity.x = 5;\n      }\n      if (keys.ArrowLeft.pressed && enemy.lastkey === 'ArrowLeft') {\n        enemy.velocity.x = -5;\n      } else if (keys.ArrowRight.pressed && enemy.lastkey === 'ArrowRight') {\n        enemy.velocity.x = 5;\n      }\n      // detect for collision\n      if (rectangularCollision({\n        rectangle1: player,\n        rectangle2: enemy\n      }) && player.isAttacking) {\n        player.isAttacking = false;\n        enemy.health -= 20;\n        document.querySelector('#enemyHealth').style.width = enemy.health + '%';\n        console.log('go');\n      }\n      if (rectangularCollision({\n        rectangle1: enemy,\n        rectangle2: player\n      }) && enemy.isAttacking) {\n        enemy.isAttacking = false;\n        player.health -= 20;\n        document.querySelector('#playerHealth').style.width = player.health + '%';\n        console.log('enemy attack successful');\n      }\n\n      // end game based on health\n      if (player.health <= 0 || player.health <= 0) {\n        determineWinner({\n          player,\n          enemy,\n          timerId\n        });\n      }\n    }\n    window.requestAnimationFrame(animate);\n  }\n  useEffect(() => {\n    animate(); // Start the animation loop after the initial render\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          height: '30px',\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'yellow',\n            height: '30px',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"playerHealth\",\n          style: {\n            position: 'absolute',\n            background: 'blue',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timer\",\n        style: {\n          backgroundColor: 'red',\n          width: '100px',\n          height: '100px',\n          flexShrink: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          height: '30px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'yellow',\n            height: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"enemyHealth\",\n          style: {\n            position: 'absolute',\n            background: 'blue',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"displayText\",\n      style: {\n        position: 'absolute',\n        color: 'black',\n        alignItems: 'center',\n        justifyContent: 'center',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        display: 'none'\n      },\n      children: \"Tie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        boxSizing: 'border-box'\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 3\n  }, this);\n};\n_s(Canvas, \"1O11hef6JMAr7xpSnL0aZ5Ib60Q=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","spriteImage","Classes","Center","Flex","position","jsxDEV","_jsxDEV","Sprite","constructor","velocity","color","offset","x","y","height","width","attackbox","isAttacking","health","draw","ctx","fillStyle","fillRect","update","Fighter","gravity","attack","setTimeout","Canvas","props","_s","canvasRef","player","enemy","backgroundImage","timer","timerId","keys","a","pressed","d","ArrowRight","ArrowLeft","lastkey","determineWinner","clearTimeout","document","querySelector","style","display","innerHTML","canvas","current","getContext","Image","src","onload","drawImage","window","addEventListener","handleKeyDown","handleKeyUp","event","key","decreaseTimer","rectangularCollision","rectangle1","rectangle2","animate","console","log","requestAnimationFrame","children","alignItems","padding","justifyContent","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","id","background","top","right","bottom","flexShrink","left","ref","boxSizing","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Canvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport spriteImage from './Images/background.png';\r\nimport Classes from \"./classes.js\";\r\nimport { Center, Flex, position } from '@chakra-ui/react';\r\n\r\nclass Sprite {\r\n  constructor({ position, velocity,color = 'red', offset= { x: 0, y: 0 } }) {\r\n    this.position = position;\r\n    this.velocity = velocity;\r\n    this.height = 150;\r\n    this.width = 50;\r\n    this.attackbox = {\r\n      position: {\r\n        x:this.position.x,\r\n        y:this.position.y\r\n      },\r\n      offset,\r\n      \r\n      width: 100 ,\r\n      height: 50\r\n    }\r\n    this.isAttacking = '';\r\n    this.color = color;\r\n    this.health = 100\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this.position.x, this.position.y, 50, this.height);\r\n    //attack box\r\n    if (this.isAttacking) {\r\n\r\n    \r\n    ctx.fillStyle = 'green';\r\n    ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\r\n  }\r\n}\r\n\r\n  update(ctx) {\r\n    this.draw();\r\n    // this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\r\n    // this.attackbox.position.y = this.position.y;\r\n\r\n    // this.position.x += this.velocity.x;\r\n    // this.position.y += this.velocity.y;\r\n    // if (this.position.y + this.height >= ctx.height) {\r\n    //   this.velocity.y = 0;\r\n    //   this.position.y = ctx.height - this.height;\r\n    // } else {\r\n    //   this.velocity.y += gravity;\r\n    // }\r\n  }\r\n    // attack() {\r\n    //   this.isAttacking = true\r\n    //   setTimeout(() => {\r\n    //     this.isAttacking = false\r\n    //   }, 100);\r\n    // }\r\n  }\r\n\r\n  class Fighter {\r\n    constructor({ position, velocity,color = 'red', offset= { x: 0, y: 0 } }) {\r\n      this.position = position;\r\n      this.velocity = velocity;\r\n      this.height = 150;\r\n      this.width = 50;\r\n      this.attackbox = {\r\n        position: {\r\n          x:this.position.x,\r\n          y:this.position.y\r\n        },\r\n        offset,\r\n        \r\n        width: 100 ,\r\n        height: 50\r\n      }\r\n      this.isAttacking = '';\r\n      this.color = color;\r\n      this.health = 100\r\n    }\r\n\r\n    draw(ctx) {\r\n      ctx.fillStyle = this.color;\r\n      ctx.fillRect(this.position.x, this.position.y, 50, this.height);\r\n      //attack box\r\n      if (this.isAttacking) {\r\n\r\n      \r\n      ctx.fillStyle = 'green';\r\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\r\n    }\r\n  }\r\n\r\n    update(ctx) {\r\n      this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\r\n      this.attackbox.position.y = this.position.y;\r\n\r\n      this.position.x += this.velocity.x;\r\n      this.position.y += this.velocity.y;\r\n      if (this.position.y + this.height >= ctx.height) {\r\n        this.velocity.y = 0;\r\n        this.position.y = ctx.height - this.height;\r\n      } else {\r\n        this.velocity.y += gravity;\r\n      }\r\n    }\r\n      attack() {\r\n        this.isAttacking = true\r\n        setTimeout(() => {\r\n          this.isAttacking = false\r\n        }, 100);\r\n      }\r\n    }\r\n\r\n\r\nconst Canvas = (props) => {\r\n  const canvasRef = useRef(null);\r\n  let player;\r\n  let enemy;\r\n  let backgroundImage;\r\n  let timer = 60;\r\n  let timerId;\r\n  const keys = {\r\n    a: {\r\n      pressed: false,\r\n    },\r\n    d: {\r\n      pressed: false,\r\n    },\r\n    ArrowRight: {\r\n      pressed: false,\r\n    },\r\n    ArrowLeft: {\r\n      pressed: false,\r\n    },\r\n  };\r\n  let lastkey = ''; // Initialize lastkey with an empty string\r\n\r\n  function determineWinner({ player, enemy, timerId }){\r\n    clearTimeout(timerId);\r\n    document.querySelector('#displayText').style.display = 'flex';\r\n      if (player.health === enemy.health){\r\n        document.querySelector('#displayText').innerHTML = 'Tie';\r\n      }\r\n      else if(player.health > enemy.health){\r\n        document.querySelector('#displayText').innerHTML = 'Player 1 Wins!!';\r\n      }\r\n      else if(enemy.health > player.health){\r\n        document.querySelector('#displayText').innerHTML = 'Player 2 Wins!!';\r\n      }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = 1024;\r\n    canvas.height = 576;\r\n\r\n    backgroundImage = new Image();\r\n    backgroundImage.src = spriteImage;\r\n\r\n    player = new Fighter({\r\n      position: { x: 150, y: 425 },\r\n      velocity: { x: 0, y: 0 },\r\n      offset: {\r\n        x:0,\r\n        y: 0\r\n      }\r\n    });\r\n\r\n    enemy = new Fighter({\r\n      position: { x: 450, y: 425 },\r\n      velocity: { x: 0, y: 0 },\r\n      offset: {\r\n        x:50,\r\n        y:0\r\n      },\r\n      color: 'blue'\r\n\r\n    });\r\n\r\n    backgroundImage.onload = () => {\r\n      // Draw the background image\r\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw the initial sprites\r\n      player.draw(ctx);\r\n      enemy.draw(ctx);\r\n    };\r\n\r\n    // Event listeners\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    function handleKeyDown(event) {\r\n      switch (event.key) {\r\n        case 'd':\r\n          keys.d.pressed = true;\r\n          lastkey = 'd';\r\n          break;\r\n        case 'a':\r\n          keys.a.pressed = true;\r\n          lastkey = 'a';\r\n          break;\r\n          case ' ':\r\n            player.attack()  \r\n            break;\r\n        case 'ArrowRight':\r\n          keys.ArrowRight.pressed = true;\r\n          enemy.lastkey = 'ArrowRight';\r\n          break;\r\n          case 'ArrowLeft':\r\n          keys.ArrowLeft.pressed = true;\r\n          enemy.lastkey = 'ArrowLeft';\r\n          break;\r\n          case 'ArrowDown':\r\n            enemy.isAttacking = true;\r\n            break\r\n      }\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.key) {\r\n        case 'd':\r\n          keys.d.pressed = false;\r\n          break;\r\n        case 'a':\r\n          keys.a.pressed = false;\r\n          break;\r\n        case 'ArrowRight':\r\n          keys.ArrowRight.pressed = false;\r\n          enemy.lastkey = 'ArrowRight';\r\n          break;\r\n          case 'ArrowLeft':\r\n          keys.ArrowLeft.pressed = false;\r\n          enemy.lastkey = 'ArrowLeft';\r\n          break;\r\n      }\r\n    }\r\n  function decreaseTimer() {\r\n    if (timer > 0 && player.health > 0 && enemy.health > 0) {\r\n      timerId = setTimeout(() => {\r\n        timer--;\r\n        document.querySelector('#timer').innerHTML = timer;\r\n        decreaseTimer(); // Call itself for the next second\r\n      }, 1000);\r\n    }\r\n  \r\n    if (player.health <= 0 || enemy.health <= 0) {\r\n      determineWinner({ player, enemy, timerId });\r\n    }\r\n  }\r\n  \r\n    decreaseTimer(); // Start the countdown\r\n\r\n  }, []);\r\n\r\n  const gravity = 0.007;\r\n\r\n  \r\n\r\n  \r\n  function rectangularCollision({rectangle1, rectangle2}) {\r\n    return (\r\n      rectangle1.attackbox.position.x + rectangle1.attackbox.width >= \r\n      rectangle2.position.x && rectangle1.attackbox.position.x <= rectangle2.position.x + rectangle2.width &&\r\n        rectangle1.attackbox.position.y + rectangle1.attackbox.height >= rectangle2.position.y\r\n        && rectangle1.attackbox.position.y <= rectangle2.position.y + rectangle2.height\r\n\r\n    );\r\n  }\r\n \r\n\r\n  function animate() {\r\n    const canvas = canvasRef.current;\r\n\r\n     if (canvas && player && enemy) {\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      // Clear the canvas\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw the background image\r\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Update and draw the sprites\r\n      player.update(canvas);\r\n      player.draw(ctx);\r\n\r\n      enemy.update(canvas);\r\n      enemy.draw(ctx);\r\n\r\n      player.velocity.x = 0;\r\n      enemy.velocity.x = 0;\r\n\r\n\r\n      if (keys.a.pressed && lastkey === 'a') {\r\n        player.velocity.x = -5;\r\n      } else if (keys.d.pressed && lastkey === 'd') {\r\n        player.velocity.x = 5;\r\n      }\r\n      if (keys.ArrowLeft.pressed && enemy.lastkey === 'ArrowLeft') {\r\n        enemy.velocity.x = -5;\r\n      } else if (keys.ArrowRight.pressed && enemy.lastkey === 'ArrowRight') {\r\n        enemy.velocity.x = 5;\r\n      }\r\n      // detect for collision\r\n      if (rectangularCollision({\r\n        rectangle1: player,\r\n        rectangle2: enemy\r\n      }) &&\r\n        player.isAttacking) {\r\n          player.isAttacking = false\r\n          enemy.health -= 20\r\n        document.querySelector('#enemyHealth').style.width = enemy.health + '%'\r\n        console.log('go');\r\n      }\r\n      \r\n      if (rectangularCollision({\r\n        rectangle1: enemy,\r\n        rectangle2: player\r\n      }) &&\r\n        enemy.isAttacking) {\r\n          enemy.isAttacking = false\r\n          player.health -= 20\r\n            document.querySelector('#playerHealth').style.width = player.health + '%'\r\n        console.log('enemy attack successful');\r\n      }\r\n    \r\n      // end game based on health\r\n      if(player.health <= 0 || player.health <=0) {\r\n        determineWinner({ player, enemy, timerId });\r\n      }\r\n    \r\n    }\r\n    \r\n    window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  useEffect(() => {\r\n    animate(); // Start the animation loop after the initial render\r\n  }, []);\r\n\r\n\r\nreturn (\r\n  <div style={{ position: 'relative', display: 'inline-block' }}>\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n      }}\r\n    >\r\n      {/* Player Health Bar */}\r\n      <div style={{ position: 'relative', height: '30px', width: '100%', display: 'flex', justifyContent: 'flex-end' }}>\r\n        <div style={{ backgroundColor: 'yellow', height: '30px', width: '100%' }}></div>\r\n        <div\r\n          id=\"playerHealth\"\r\n          style={{\r\n            position: 'absolute',\r\n            background: 'blue',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            width: '100%',\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* Timer */}\r\n      <div\r\n      id = \"timer\"\r\n       style={{ \r\n        backgroundColor: 'red', \r\n        width: '100px', \r\n        height: '100px', \r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        }}\r\n      >\r\n        {timer}\r\n      </div>\r\n\r\n      {/* Enemy Health Bar */}\r\n      <div style={{ position: 'relative', height: '30px', width: '100%' }}>\r\n        <div style={{ backgroundColor: 'yellow', height: '30px' }}></div>\r\n        <div\r\n          id=\"enemyHealth\"\r\n          style={{\r\n            position: 'absolute',\r\n            background: 'blue',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n    <div\r\n    id=\"displayText\"\r\n     style={{\r\n      position: 'absolute', \r\n      color: 'black',\r\n      alignItems: 'center', \r\n      justifyContent:'center',\r\n      top: 0,\r\n      right : 0,\r\n      bottom : 0,\r\n      left: 0,\r\n      display: 'none'\r\n      }}>Tie\r\n      </div>\r\n    <canvas ref={canvasRef} style={{ boxSizing: 'border-box' }} {...props} />\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}