{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from \"axios\";\n// import {\n//   Box,\n//   Button,\n//   Flex,\n//   Container,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   Stack,\n//   useToast,\n//   InputGroup,\n//   InputRightElement,\n//   Text,\n// } from '@chakra-ui/react';\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\n// import { ViewIcon, ViewOffIcon } from  '@chakra-ui/icons';\n// import { useNavigate } from 'react-router-dom';\n\n//   const ding=(e)=>{\n//     const sound=new Audio(clicksound);\n//     sound.play();\n//    }\n\n//   export default function Log(){\n//     const [password, setPassword] = useState();\n//     const [show, setShow] = useState(false);\n//     const [email, setEmail] = useState();\n//     const [loading, setLoading] = useState(false);\n//     const toast = useToast();\n//     const navigation = useNavigate();\n\n//     const handleClick = () => setShow(!show);\n//     const submitHandler = async () => {\n//       setLoading(true);\n//       if (!email || !password) {\n//         toast({\n//           title: 'Please fill all the fields',\n//           status: 'warning',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//         setLoading(false);\n//         return;\n//       }\n//       try {\n//         const config = {\n//           headers: {\n//             \"Content-type\": \"application/json\",\n//           },\n//         };\n//         const response = await axios.post(\n//           \"http://127.0.0.1:5000/roboWar/auth/login\",\n//           { email, password },\n//           config\n//         );\n\n//         toast({\n//           title: 'Login Successful',\n//           status: 'success',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\n//       } catch (err) {\n//         toast({\n//           title: 'Error Occurred!',\n//           description: err.response.data.message,\n//           status: 'error',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//       }\n//        setLoading(false);\n//        navigation('/Main');\n//     };\n\n//     return(\n//      <>\n//         <Container>\n//         <Flex color='white'>\n//         <Box w='5750px'>\n\n//         <FormControl isRequired>\n//             <FormLabel>Email</FormLabel>\n//         <Input\n//         onClick={ding}\n//           placeholder=\"Enter your name\"\n//           bg={email ? \"gray.50\" : \"white\"}\n//           color=\"black\"\n//           _hover={{ borderColor: \"black\" }}\n//           borderColor=\"black\"\n//           onChange={(event) => {\n//             setEmail(event.target.value);\n//           }}\n//           value={email}\n//         />\n//         </FormControl>\n\n//         <FormControl id=\"password\" isRequired>\n//         <FormLabel>Password</FormLabel>\n//         <InputGroup>\n//         <Input\n//         onClick={ding}\n//           placeholder=\"Enter your password\"\n//           bg={password ? \"gray.50\" : \"white\"}\n//           color=\"black\"\n//           _hover={{ borderColor: \"black\" }}\n//           borderColor=\"black\"\n//           onChange={(event) => {\n//             setPassword(event.target.value);\n//           }}\n//           value={password}\n//         />\n//         <InputRightElement w=\"4.5em\">\n//             <Button h=\"1.75em\" size=\"sm\" onClick={handleClick} color=\"black\">\n//               {show ? <ViewOffIcon /> : <ViewIcon />}\n//             </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//         </FormControl>\n\n//         </Box>\n//         </Flex>\n\n//         <Button\n//         colorScheme=\"teal\"\n//         size=\"lg\"\n//         margin={'5'}\n//         color=\"white\"\n//         fontWeight=\"bold\"\n//         borderRadius=\"md\"\n//         bgGradient=\"linear(to-r, teal.500, green.500)\"\n//         _hover={{\n//           bgGradient: 'linear(to-r, red.500, yellow.500)',\n//         }}\n//         style={{ marginTop: 15 }}\n//         onClick={() => {\n//           ding(); // Play sound effect\n//           submitHandler(); // Handle form submission\n//         }}\n//         isLoading={loading}\n//         >\n//           Login\n//         </Button>\n\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\n//             <Button fontWeight={'bold'} colorScheme='red' variant='link' onClick={ding}>\n//       Forgot Password?\n//             </Button>\n//             <Button fontWeight={'bold'} colorScheme='blue' variant='outline' onClick={ding}>\n//               Help\n//             </Button>\n//         </Stack>\n//         </Container>\n//         </>\n//         )\n//     };","map":{"version":3,"names":[],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Log.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from \"axios\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Flex,\r\n//   Container,\r\n//   FormControl,\r\n//   FormLabel,\r\n//   Input,\r\n//   Stack,\r\n//   useToast,\r\n//   InputGroup,\r\n//   InputRightElement,\r\n//   Text,\r\n// } from '@chakra-ui/react';\r\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\r\n// import { ViewIcon, ViewOffIcon } from  '@chakra-ui/icons';\r\n// import { useNavigate } from 'react-router-dom';\r\n  \r\n\r\n//   const ding=(e)=>{\r\n//     const sound=new Audio(clicksound);\r\n//     sound.play();\r\n//    }\r\n\r\n//   export default function Log(){\r\n//     const [password, setPassword] = useState();\r\n//     const [show, setShow] = useState(false);\r\n//     const [email, setEmail] = useState();\r\n//     const [loading, setLoading] = useState(false);\r\n//     const toast = useToast();\r\n//     const navigation = useNavigate();\r\n    \r\n//     const handleClick = () => setShow(!show);\r\n//     const submitHandler = async () => {\r\n//       setLoading(true);\r\n//       if (!email || !password) {\r\n//         toast({\r\n//           title: 'Please fill all the fields',\r\n//           status: 'warning',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n//       try {\r\n//         const config = {\r\n//           headers: {\r\n//             \"Content-type\": \"application/json\",\r\n//           },\r\n//         };\r\n//         const response = await axios.post(\r\n//           \"http://127.0.0.1:5000/roboWar/auth/login\",\r\n//           { email, password },\r\n//           config\r\n//         );\r\n    \r\n//         toast({\r\n//           title: 'Login Successful',\r\n//           status: 'success',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//       localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\r\n//       } catch (err) {\r\n//         toast({\r\n//           title: 'Error Occurred!',\r\n//           description: err.response.data.message,\r\n//           status: 'error',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//       }\r\n//        setLoading(false);\r\n//        navigation('/Main');\r\n//     };\r\n    \r\n\r\n//     return(\r\n//      <>\r\n//         <Container>\r\n//         <Flex color='white'>\r\n//         <Box w='5750px'>\r\n          \r\n//         <FormControl isRequired>\r\n//             <FormLabel>Email</FormLabel>\r\n//         <Input\r\n//         onClick={ding}\r\n//           placeholder=\"Enter your name\"\r\n//           bg={email ? \"gray.50\" : \"white\"}\r\n//           color=\"black\"\r\n//           _hover={{ borderColor: \"black\" }}\r\n//           borderColor=\"black\"\r\n//           onChange={(event) => {\r\n//             setEmail(event.target.value);\r\n//           }}\r\n//           value={email}\r\n//         />\r\n//         </FormControl>\r\n\r\n//         <FormControl id=\"password\" isRequired>\r\n//         <FormLabel>Password</FormLabel>\r\n//         <InputGroup>\r\n//         <Input\r\n//         onClick={ding}\r\n//           placeholder=\"Enter your password\"\r\n//           bg={password ? \"gray.50\" : \"white\"}\r\n//           color=\"black\"\r\n//           _hover={{ borderColor: \"black\" }}\r\n//           borderColor=\"black\"\r\n//           onChange={(event) => {\r\n//             setPassword(event.target.value);\r\n//           }}\r\n//           value={password}\r\n//         />\r\n//         <InputRightElement w=\"4.5em\">\r\n//             <Button h=\"1.75em\" size=\"sm\" onClick={handleClick} color=\"black\">\r\n//               {show ? <ViewOffIcon /> : <ViewIcon />}\r\n//             </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//         </FormControl>\r\n        \r\n//         </Box>\r\n//         </Flex>\r\n        \r\n//         <Button\r\n//         colorScheme=\"teal\"\r\n//         size=\"lg\"\r\n//         margin={'5'}\r\n//         color=\"white\"\r\n//         fontWeight=\"bold\"\r\n//         borderRadius=\"md\"\r\n//         bgGradient=\"linear(to-r, teal.500, green.500)\"\r\n//         _hover={{\r\n//           bgGradient: 'linear(to-r, red.500, yellow.500)',\r\n//         }}\r\n//         style={{ marginTop: 15 }}\r\n//         onClick={() => {\r\n//           ding(); // Play sound effect\r\n//           submitHandler(); // Handle form submission\r\n//         }}\r\n//         isLoading={loading}\r\n//         >\r\n//           Login\r\n//         </Button>\r\n\r\n\r\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\r\n//             <Button fontWeight={'bold'} colorScheme='red' variant='link' onClick={ding}>\r\n//       Forgot Password?\r\n//             </Button>\r\n//             <Button fontWeight={'bold'} colorScheme='blue' variant='outline' onClick={ding}>\r\n//               Help\r\n//             </Button>\r\n//         </Stack>\r\n//         </Container>\r\n//         </>\r\n//         )\r\n//     };\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}