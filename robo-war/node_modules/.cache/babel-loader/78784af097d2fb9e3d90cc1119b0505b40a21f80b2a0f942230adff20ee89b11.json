{"ast":null,"code":"/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n*/\n\n'use strict';\n\nvar os = require('os');\nvar hasFlag = require('./has-flag.js');\nvar env = process.env;\nvar forceColor = void 0;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n  return {\n    level: level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n  var min = forceColor ? 1 : 0;\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\n    // first release that supports 16m/TrueColor.\n    var osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n    return 1;\n  }\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function (sign) {\n      return sign in env;\n    }) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n    return min;\n  }\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n  if ('TERM_PROGRAM' in env) {\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Hyper':\n        return 3;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n  return min;\n}\nfunction getSupportLevel(stream) {\n  var level = supportsColor(stream);\n  return translateLevel(level);\n}\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr)\n};","map":{"version":3,"names":["os","require","hasFlag","env","process","forceColor","FORCE_COLOR","length","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","module","exports","stdout","stderr"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/node_modules/colors/lib/system/supports-colors.js"],"sourcesContent":["/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n*/\r\n\r\n'use strict';\r\n\r\nvar os = require('os');\r\nvar hasFlag = require('./has-flag.js');\r\n\r\nvar env = process.env;\r\n\r\nvar forceColor = void 0;\r\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\r\n  forceColor = false;\r\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')\r\n           || hasFlag('color=always')) {\r\n  forceColor = true;\r\n}\r\nif ('FORCE_COLOR' in env) {\r\n  forceColor = env.FORCE_COLOR.length === 0\r\n    || parseInt(env.FORCE_COLOR, 10) !== 0;\r\n}\r\n\r\nfunction translateLevel(level) {\r\n  if (level === 0) {\r\n    return false;\r\n  }\r\n\r\n  return {\r\n    level: level,\r\n    hasBasic: true,\r\n    has256: level >= 2,\r\n    has16m: level >= 3,\r\n  };\r\n}\r\n\r\nfunction supportsColor(stream) {\r\n  if (forceColor === false) {\r\n    return 0;\r\n  }\r\n\r\n  if (hasFlag('color=16m') || hasFlag('color=full')\r\n      || hasFlag('color=truecolor')) {\r\n    return 3;\r\n  }\r\n\r\n  if (hasFlag('color=256')) {\r\n    return 2;\r\n  }\r\n\r\n  if (stream && !stream.isTTY && forceColor !== true) {\r\n    return 0;\r\n  }\r\n\r\n  var min = forceColor ? 1 : 0;\r\n\r\n  if (process.platform === 'win32') {\r\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\r\n    // libuv that enables 256 color output on Windows. Anything earlier and it\r\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\r\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first\r\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\r\n    // first release that supports 16m/TrueColor.\r\n    var osRelease = os.release().split('.');\r\n    if (Number(process.versions.node.split('.')[0]) >= 8\r\n        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\r\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\r\n    }\r\n\r\n    return 1;\r\n  }\r\n\r\n  if ('CI' in env) {\r\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {\r\n      return sign in env;\r\n    }) || env.CI_NAME === 'codeship') {\r\n      return 1;\r\n    }\r\n\r\n    return min;\r\n  }\r\n\r\n  if ('TEAMCITY_VERSION' in env) {\r\n    return (/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0\r\n    );\r\n  }\r\n\r\n  if ('TERM_PROGRAM' in env) {\r\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\r\n\r\n    switch (env.TERM_PROGRAM) {\r\n      case 'iTerm.app':\r\n        return version >= 3 ? 3 : 2;\r\n      case 'Hyper':\r\n        return 3;\r\n      case 'Apple_Terminal':\r\n        return 2;\r\n      // No default\r\n    }\r\n  }\r\n\r\n  if (/-256(color)?$/i.test(env.TERM)) {\r\n    return 2;\r\n  }\r\n\r\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\r\n    return 1;\r\n  }\r\n\r\n  if ('COLORTERM' in env) {\r\n    return 1;\r\n  }\r\n\r\n  if (env.TERM === 'dumb') {\r\n    return min;\r\n  }\r\n\r\n  return min;\r\n}\r\n\r\nfunction getSupportLevel(stream) {\r\n  var level = supportsColor(stream);\r\n  return translateLevel(level);\r\n}\r\n\r\nmodule.exports = {\r\n  supportsColor: getSupportLevel,\r\n  stdout: getSupportLevel(process.stdout),\r\n  stderr: getSupportLevel(process.stderr),\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}