{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\CanvasDrawing.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Components.css';\nimport spriteImage from './Images/background.png';\nimport { AnimationFrame } from './AnimationFrame.js';\nimport kenjiImage from './Idle3 .png';\nimport samuraiImage from './fighter1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gravity = 0.7;\nconst initialPlayerState = {\n  player: {\n    position: {\n      x: 100,\n      y: 400\n    },\n    velocity: {\n      x: 10,\n      y: 0\n    },\n    scale: 2.5,\n    health: 100 // Add health for player\n  },\n\n  enemy: {\n    position: {\n      x: 250,\n      y: 400\n    },\n    velocity: {\n      x: 10,\n      y: 0\n    },\n    scale: 2.5,\n    health: 100 // Add health for enemy\n  }\n};\n\nconst kenjiFrameWidth = 284;\nconst kenjiFrameHeight = 600;\nconst kenjiTotalFrames = 1;\nconst kenjiAnimationSpeed = 10;\nconst samuraiFrameWidth = 284;\nconst samuraiFrameHeight = 600;\nconst samuraiTotalFrames = 1;\nconst samuraiAnimationSpeed = 10;\nfunction CanvasDrawing() {\n  _s();\n  const canvasRef = useRef(null);\n  const [players, setPlayers] = useState(initialPlayerState);\n  const [currentFrame, setCurrentFrame] = useState(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 576;\n    const backgroundImage = new Image();\n    backgroundImage.src = spriteImage;\n    const image = new Image();\n    image.src = kenjiImage;\n    image.onload = function () {\n      ctx.drawImage(image, 50, 50);\n    };\n    const fighter = new Image();\n    fighter.src = samuraiImage;\n    fighter.onload = function () {\n      ctx.drawImage(fighter, 50, 50);\n    };\n    const kenjiAnimationFrame = new AnimationFrame({\n      image: image,\n      frameWidth: kenjiFrameWidth,\n      frameHeight: kenjiFrameHeight,\n      totalFrames: kenjiTotalFrames,\n      animationSpeed: kenjiAnimationSpeed\n    });\n    const samuraiAnimationFrame = new AnimationFrame({\n      image: fighter,\n      frameWidth: samuraiFrameWidth,\n      frameHeight: samuraiFrameHeight,\n      totalFrames: samuraiTotalFrames,\n      animationSpeed: samuraiAnimationSpeed\n    });\n    const keys = {\n      player: {\n        a: false,\n        d: false,\n        w: false,\n        space: false\n      },\n      enemy: {\n        ArrowRight: false,\n        ArrowLeft: false,\n        ArrowUp: false,\n        ArrowDown: false\n      }\n    };\n    const handleKeyDown = event => {\n      if (!players.player.dead) {\n        switch (event.key) {\n          case 'a':\n            keys.a = true;\n            break;\n          case 'd':\n            keys.d = true;\n            break;\n          case 'w':\n            players.player.velocity.y = -20;\n            break;\n          case ' ':\n            players.player.attack();\n            break;\n        }\n      }\n      if (!players.enemy.dead) {\n        switch (event.key) {\n          case 'ArrowRight':\n            keys.d = true;\n            break;\n          case 'ArrowLeft':\n            keys.a = true;\n            break;\n          case 'ArrowUp':\n            players.enemy.velocity.y = -20;\n            break;\n          case 'ArrowDown':\n            players.enemy.attack();\n            break;\n        }\n      }\n    };\n    const handleKeyUp = event => {\n      switch (event.key) {\n        case 'a':\n          keys.a = false;\n          break;\n        case 'd':\n          keys.d = false;\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    const animate = () => {\n      window.requestAnimationFrame(animate);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n      if (keys.a) {\n        players.player.position.x -= players.player.velocity.x;\n      } else if (keys.d) {\n        players.player.position.x += players.player.velocity.x;\n      } else if (keys.w) {\n        // Handle jump for player\n        // Add your jump logic here\n      } else if (keys.space) {\n        // Handle attack for player\n        // Add your attack logic here\n        players.player.attack();\n      }\n      if (keys.ArrowLeft) {\n        players.enemy.position.x -= players.enemy.velocity.x;\n      } else if (keys.ArrowRight) {\n        players.enemy.position.x += players.enemy.velocity.x;\n      } else if (keys.ArrowUp) {\n        // Handle jump for enemy\n        // Add your jump logic here\n      } else if (keys.ArrowDown) {\n        // Handle attack for enemy\n        // Add your attack logic here\n        players.enemy.attack();\n      }\n      kenjiAnimationFrame.draw(ctx, players.player.position.x, players.player.position.y);\n      samuraiAnimationFrame.draw(ctx, players.enemy.position.x + 400, players.enemy.position.y);\n      setCurrentFrame(prevFrame => prevFrame + 1);\n    };\n    animate();\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasDrawing, \"yg0sQjJEHICtvvbQ6pEOCVgNJMQ=\");\n_c = CanvasDrawing;\nexport default CanvasDrawing;\n\n// import React, { useRef, useEffect, useState } from 'react';\n// import './Components.css';\n\n// import spriteImage from './Images/background.png';\n// import { AnimationFrame } from './AnimationFrame.js';\n// import kenjiImage from './Idle3 .png';\n// import samuraiImage from './fighter1.png';\n\n// const gravity = 0.7;\n// const initialPlayer1State = {\n//   position: {\n//     x: 100,\n//     y: 400\n//   },\n//   velocity: {\n//     x: 10,\n//     y: 0\n//   },\n//   scale: 2.5,\n//   health: 100 \n// };\n\n// const initialPlayer2State = {\n//   position: {\n//     x: 250,\n//     y: 400\n//   },\n//   velocity: {\n//     x: 10,\n//     y: 0\n//   },\n//   scale: 2.5,\n//   health: 100\n// };\n\n// const kenjiFrameWidth = 284;\n// const kenjiFrameHeight = 600;\n// const kenjiTotalFrames = 1;\n// const kenjiAnimationSpeed = 10;\n\n// const samuraiFrameWidth = 284;\n// const samuraiFrameHeight = 600;\n// const samuraiTotalFrames = 1;\n// const samuraiAnimationSpeed = 10;\n\n// function CanvasDrawing() {\n//   const canvasRef = useRef(null);\n//   const [player1, setPlayer1] = useState(initialPlayer1State);\n//   const [player2, setPlayer2] = useState(initialPlayer2State);\n//   const [currentFrame, setCurrentFrame] = useState(0);\n\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     const ctx = canvas.getContext('2d');\n\n//     canvas.width = 1024;\n//     canvas.height = 576;\n\n//     const backgroundImage = new Image();\n//     backgroundImage.src = spriteImage;\n\n//     const image = new Image();\n//     image.src = kenjiImage;\n\n//     image.onload = function () {\n//       ctx.drawImage(image, 50, 50);\n//     };\n\n//     const fighter = new Image();\n//     fighter.src = samuraiImage;\n\n//     fighter.onload = function () {\n//       ctx.drawImage(fighter, 50, 50);\n//     };\n\n//     const kenjiAnimationFrame = new AnimationFrame({\n//       image: image,\n//       frameWidth: kenjiFrameWidth,\n//       frameHeight: kenjiFrameHeight,\n//       totalFrames: kenjiTotalFrames,\n//       animationSpeed: kenjiAnimationSpeed,\n//     });\n\n//     const samuraiAnimationFrame = new AnimationFrame({\n//       image: fighter,\n//       frameWidth: samuraiFrameWidth,\n//       frameHeight: samuraiFrameHeight,\n//       totalFrames: samuraiTotalFrames,\n//       animationSpeed: samuraiAnimationSpeed,\n//     });\n\n//     const keys = {\n//       a: false,\n//       d: false,\n//       w: false,\n//       space: false,\n//       ArrowLeft: false,\n//       ArrowRight: false,\n//       ArrowUp: false,\n//       ArrowDown: false,\n//     };\n\n//     const handleKeyDown = (event) => {\n//       if (event.key === 'a') {\n//         keys.a = true;\n//       } else if (event.key === 'd') {\n//         keys.d = true;\n//       } else if (event.key === 'w') {\n//         keys.w = true;\n//       } else if (event.key === ' ') {\n//         keys.space = true;\n//       } else if (event.key === 'ArrowLeft') {\n//         keys.ArrowLeft = true;\n//       } else if (event.key === 'ArrowRight') {\n//         keys.ArrowRight = true;\n//       } else if (event.key === 'ArrowUp') {\n//         keys.ArrowUp = true;\n//       } else if (event.key === 'ArrowDown') {\n//         keys.ArrowDown = true;\n//       }\n//     };\n\n//     const handleKeyUp = (event) => {\n//       if (event.key === 'a') {\n//         keys.a = false;\n//       } else if (event.key === 'd') {\n//         keys.d = false;\n//       } else if (event.key === 'w') {\n//         keys.w = false;\n//       } else if (event.key === ' ') {\n//         keys.space = false;\n//       } else if (event.key === 'ArrowLeft') {\n//         keys.ArrowLeft = false;\n//       } else if (event.key === 'ArrowRight') {\n//         keys.ArrowRight = false;\n//       } else if (event.key === 'ArrowUp') {\n//         keys.ArrowUp = false;\n//       } else if (event.key === 'ArrowDown') {\n//         keys.ArrowDown = false;\n//       }\n//     };\n\n//     window.addEventListener('keydown', handleKeyDown);\n//     window.addEventListener('keyup', handleKeyUp);\n\n//     const animate = () => {\n//       ctx.clearRect(0, 0, canvas.width, canvas.height);\n//       ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n\n//       if (keys.a) {\n//         player1.position.x -= player1.velocity.x;\n//       } else if (keys.d) {\n//         player1.position.x += player1.velocity.x;\n//       } else if (keys.w) {\n//         // Handle jump for player 1\n//         // Add your jump logic here\n//       } else if (keys.space) {\n//         // Handle attack for player 1\n//         // Add your attack logic here\n//       }\n\n//       if (keys.ArrowLeft) {\n//         player2.position.x -= player2.velocity.x;\n//       } else if (keys.ArrowRight) {\n//         player2.position.x += player2.velocity.x;\n//       } else if (keys.ArrowUp) {\n//         // Handle jump for player 2\n//         // Add your jump logic here\n//       } else if (keys.ArrowDown) {\n//         // Handle attack for player 2\n//         // Add your attack logic here\n//       }\n\n//       kenjiAnimationFrame.draw(ctx, player1.position.x, player1.position.y);\n//       samuraiAnimationFrame.draw(ctx, player2.position.x + 400, player2.position.y);\n\n//       setCurrentFrame((prevFrame) => prevFrame + 1);\n\n//       requestAnimationFrame(animate);\n//     };\n\n//     animate();\n\n//     return () => {\n//       window.removeEventListener('keydown', handleKeyDown);\n//       window.removeEventListener('keyup', handleKeyUp);\n//     };\n//   }, []);\n\n//   return (\n//     <div>\n//       <canvas ref={canvasRef}></canvas>\n//     </div>\n//   );\n// }\n\n// export default CanvasDrawing;\nvar _c;\n$RefreshReg$(_c, \"CanvasDrawing\");","map":{"version":3,"names":["React","useRef","useEffect","useState","spriteImage","AnimationFrame","kenjiImage","samuraiImage","jsxDEV","_jsxDEV","gravity","initialPlayerState","player","position","x","y","velocity","scale","health","enemy","kenjiFrameWidth","kenjiFrameHeight","kenjiTotalFrames","kenjiAnimationSpeed","samuraiFrameWidth","samuraiFrameHeight","samuraiTotalFrames","samuraiAnimationSpeed","CanvasDrawing","_s","canvasRef","players","setPlayers","currentFrame","setCurrentFrame","canvas","current","ctx","getContext","width","height","backgroundImage","Image","src","image","onload","drawImage","fighter","kenjiAnimationFrame","frameWidth","frameHeight","totalFrames","animationSpeed","samuraiAnimationFrame","keys","a","d","w","space","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","handleKeyDown","event","dead","key","attack","handleKeyUp","window","addEventListener","animate","requestAnimationFrame","clearRect","draw","prevFrame","removeEventListener","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/CanvasDrawing.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport './Components.css';\r\n\r\nimport spriteImage from './Images/background.png';\r\nimport { AnimationFrame } from './AnimationFrame.js';\r\nimport kenjiImage from './Idle3 .png';\r\nimport samuraiImage from './fighter1.png';\r\n\r\nconst gravity = 0.7;\r\nconst initialPlayerState = {\r\n  player: {\r\n    position: {\r\n      x: 100,\r\n      y: 400\r\n    },\r\n    velocity: {\r\n      x: 10,\r\n      y: 0\r\n    },\r\n    scale: 2.5,\r\n    health: 100 // Add health for player\r\n  },\r\n  enemy: {\r\n    position: {\r\n      x: 250,\r\n      y: 400\r\n    },\r\n    velocity: {\r\n      x: 10,\r\n      y: 0\r\n    },\r\n    scale: 2.5,\r\n    health: 100 // Add health for enemy\r\n  }\r\n};\r\n\r\nconst kenjiFrameWidth = 284;\r\nconst kenjiFrameHeight = 600;\r\nconst kenjiTotalFrames = 1;\r\nconst kenjiAnimationSpeed = 10;\r\n\r\nconst samuraiFrameWidth = 284;\r\nconst samuraiFrameHeight = 600;\r\nconst samuraiTotalFrames = 1;\r\nconst samuraiAnimationSpeed = 10;\r\n\r\nfunction CanvasDrawing() {\r\n  const canvasRef = useRef(null);\r\n  const [players, setPlayers] = useState(initialPlayerState);\r\n  const [currentFrame, setCurrentFrame] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = 1024;\r\n    canvas.height = 576;\r\n\r\n    const backgroundImage = new Image();\r\n    backgroundImage.src = spriteImage;\r\n\r\n    const image = new Image();\r\n    image.src = kenjiImage;\r\n\r\n    image.onload = function () {\r\n      ctx.drawImage(image, 50, 50);\r\n    };\r\n\r\n    const fighter = new Image();\r\n    fighter.src = samuraiImage;\r\n\r\n    fighter.onload = function () {\r\n      ctx.drawImage(fighter, 50, 50);\r\n    };\r\n\r\n    const kenjiAnimationFrame = new AnimationFrame({\r\n      image: image,\r\n      frameWidth: kenjiFrameWidth,\r\n      frameHeight: kenjiFrameHeight,\r\n      totalFrames: kenjiTotalFrames,\r\n      animationSpeed: kenjiAnimationSpeed,\r\n    });\r\n\r\n    const samuraiAnimationFrame = new AnimationFrame({\r\n      image: fighter,\r\n      frameWidth: samuraiFrameWidth,\r\n      frameHeight: samuraiFrameHeight,\r\n      totalFrames: samuraiTotalFrames,\r\n      animationSpeed: samuraiAnimationSpeed,\r\n    });\r\n\r\n    const keys = {\r\n      player : {\r\n      a: false,\r\n      d: false,\r\n      w: false,\r\n      space: false,\r\n      },\r\n      enemy : {\r\n      ArrowRight : false,\r\n      ArrowLeft : false,\r\n      ArrowUp :false,\r\n      ArrowDown : false,\r\n      }\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n      if (!players.player.dead) {\r\n        switch (event.key) {\r\n          case 'a':\r\n            keys.a = true;\r\n            break;\r\n          case 'd':\r\n            keys.d = true;\r\n            break;\r\n          case 'w':\r\n            players.player.velocity.y = -20;\r\n            break;\r\n          case ' ':\r\n            players.player.attack();\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (!players.enemy.dead) {\r\n        switch (event.key) {\r\n          case 'ArrowRight':\r\n            keys.d = true;\r\n            break;\r\n          case 'ArrowLeft':\r\n            keys.a = true;\r\n            break;\r\n          case 'ArrowUp':\r\n            players.enemy.velocity.y = -20;\r\n            break;\r\n          case 'ArrowDown':\r\n            players.enemy.attack();\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event) => {\r\n      switch (event.key) {\r\n        case 'a':\r\n          keys.a = false;\r\n          break;\r\n        case 'd':\r\n          keys.d = false;\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    const animate = () => {\r\n      window.requestAnimationFrame(animate);\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n      if (keys.a) {\r\n        players.player.position.x -= players.player.velocity.x;\r\n      } else if (keys.d) {\r\n        players.player.position.x += players.player.velocity.x;\r\n      } else if (keys.w) {\r\n        // Handle jump for player\r\n        // Add your jump logic here\r\n      } else if (keys.space) {\r\n        // Handle attack for player\r\n        // Add your attack logic here\r\n        players.player.attack();\r\n      }\r\n\r\n      if (keys.ArrowLeft) {\r\n        players.enemy.position.x -= players.enemy.velocity.x;\r\n      } else if (keys.ArrowRight) {\r\n        players.enemy.position.x += players.enemy.velocity.x;\r\n      } else if (keys.ArrowUp) {\r\n        // Handle jump for enemy\r\n        // Add your jump logic here\r\n      } else if (keys.ArrowDown) {\r\n        // Handle attack for enemy\r\n        // Add your attack logic here\r\n        players.enemy.attack();\r\n      }\r\n\r\n      kenjiAnimationFrame.draw(ctx, players.player.position.x, players.player.position.y);\r\n      samuraiAnimationFrame.draw(ctx, players.enemy.position.x + 400, players.enemy.position.y);\r\n\r\n      setCurrentFrame((prevFrame) => prevFrame + 1);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasDrawing;\r\n\r\n\r\n\r\n\r\n// import React, { useRef, useEffect, useState } from 'react';\r\n// import './Components.css';\r\n\r\n// import spriteImage from './Images/background.png';\r\n// import { AnimationFrame } from './AnimationFrame.js';\r\n// import kenjiImage from './Idle3 .png';\r\n// import samuraiImage from './fighter1.png';\r\n\r\n// const gravity = 0.7;\r\n// const initialPlayer1State = {\r\n//   position: {\r\n//     x: 100,\r\n//     y: 400\r\n//   },\r\n//   velocity: {\r\n//     x: 10,\r\n//     y: 0\r\n//   },\r\n//   scale: 2.5,\r\n//   health: 100 \r\n// };\r\n\r\n// const initialPlayer2State = {\r\n//   position: {\r\n//     x: 250,\r\n//     y: 400\r\n//   },\r\n//   velocity: {\r\n//     x: 10,\r\n//     y: 0\r\n//   },\r\n//   scale: 2.5,\r\n//   health: 100\r\n// };\r\n\r\n// const kenjiFrameWidth = 284;\r\n// const kenjiFrameHeight = 600;\r\n// const kenjiTotalFrames = 1;\r\n// const kenjiAnimationSpeed = 10;\r\n\r\n// const samuraiFrameWidth = 284;\r\n// const samuraiFrameHeight = 600;\r\n// const samuraiTotalFrames = 1;\r\n// const samuraiAnimationSpeed = 10;\r\n\r\n// function CanvasDrawing() {\r\n//   const canvasRef = useRef(null);\r\n//   const [player1, setPlayer1] = useState(initialPlayer1State);\r\n//   const [player2, setPlayer2] = useState(initialPlayer2State);\r\n//   const [currentFrame, setCurrentFrame] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const canvas = canvasRef.current;\r\n//     const ctx = canvas.getContext('2d');\r\n\r\n//     canvas.width = 1024;\r\n//     canvas.height = 576;\r\n\r\n//     const backgroundImage = new Image();\r\n//     backgroundImage.src = spriteImage;\r\n\r\n//     const image = new Image();\r\n//     image.src = kenjiImage;\r\n\r\n//     image.onload = function () {\r\n//       ctx.drawImage(image, 50, 50);\r\n//     };\r\n\r\n//     const fighter = new Image();\r\n//     fighter.src = samuraiImage;\r\n\r\n//     fighter.onload = function () {\r\n//       ctx.drawImage(fighter, 50, 50);\r\n//     };\r\n\r\n//     const kenjiAnimationFrame = new AnimationFrame({\r\n//       image: image,\r\n//       frameWidth: kenjiFrameWidth,\r\n//       frameHeight: kenjiFrameHeight,\r\n//       totalFrames: kenjiTotalFrames,\r\n//       animationSpeed: kenjiAnimationSpeed,\r\n//     });\r\n\r\n//     const samuraiAnimationFrame = new AnimationFrame({\r\n//       image: fighter,\r\n//       frameWidth: samuraiFrameWidth,\r\n//       frameHeight: samuraiFrameHeight,\r\n//       totalFrames: samuraiTotalFrames,\r\n//       animationSpeed: samuraiAnimationSpeed,\r\n//     });\r\n\r\n//     const keys = {\r\n//       a: false,\r\n//       d: false,\r\n//       w: false,\r\n//       space: false,\r\n//       ArrowLeft: false,\r\n//       ArrowRight: false,\r\n//       ArrowUp: false,\r\n//       ArrowDown: false,\r\n//     };\r\n\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === 'a') {\r\n//         keys.a = true;\r\n//       } else if (event.key === 'd') {\r\n//         keys.d = true;\r\n//       } else if (event.key === 'w') {\r\n//         keys.w = true;\r\n//       } else if (event.key === ' ') {\r\n//         keys.space = true;\r\n//       } else if (event.key === 'ArrowLeft') {\r\n//         keys.ArrowLeft = true;\r\n//       } else if (event.key === 'ArrowRight') {\r\n//         keys.ArrowRight = true;\r\n//       } else if (event.key === 'ArrowUp') {\r\n//         keys.ArrowUp = true;\r\n//       } else if (event.key === 'ArrowDown') {\r\n//         keys.ArrowDown = true;\r\n//       }\r\n//     };\r\n\r\n//     const handleKeyUp = (event) => {\r\n//       if (event.key === 'a') {\r\n//         keys.a = false;\r\n//       } else if (event.key === 'd') {\r\n//         keys.d = false;\r\n//       } else if (event.key === 'w') {\r\n//         keys.w = false;\r\n//       } else if (event.key === ' ') {\r\n//         keys.space = false;\r\n//       } else if (event.key === 'ArrowLeft') {\r\n//         keys.ArrowLeft = false;\r\n//       } else if (event.key === 'ArrowRight') {\r\n//         keys.ArrowRight = false;\r\n//       } else if (event.key === 'ArrowUp') {\r\n//         keys.ArrowUp = false;\r\n//       } else if (event.key === 'ArrowDown') {\r\n//         keys.ArrowDown = false;\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener('keydown', handleKeyDown);\r\n//     window.addEventListener('keyup', handleKeyUp);\r\n\r\n//     const animate = () => {\r\n//       ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//       ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n//       if (keys.a) {\r\n//         player1.position.x -= player1.velocity.x;\r\n//       } else if (keys.d) {\r\n//         player1.position.x += player1.velocity.x;\r\n//       } else if (keys.w) {\r\n//         // Handle jump for player 1\r\n//         // Add your jump logic here\r\n//       } else if (keys.space) {\r\n//         // Handle attack for player 1\r\n//         // Add your attack logic here\r\n//       }\r\n\r\n//       if (keys.ArrowLeft) {\r\n//         player2.position.x -= player2.velocity.x;\r\n//       } else if (keys.ArrowRight) {\r\n//         player2.position.x += player2.velocity.x;\r\n//       } else if (keys.ArrowUp) {\r\n//         // Handle jump for player 2\r\n//         // Add your jump logic here\r\n//       } else if (keys.ArrowDown) {\r\n//         // Handle attack for player 2\r\n//         // Add your attack logic here\r\n//       }\r\n\r\n//       kenjiAnimationFrame.draw(ctx, player1.position.x, player1.position.y);\r\n//       samuraiAnimationFrame.draw(ctx, player2.position.x + 400, player2.position.y);\r\n\r\n//       setCurrentFrame((prevFrame) => prevFrame + 1);\r\n\r\n//       requestAnimationFrame(animate);\r\n//     };\r\n\r\n//     animate();\r\n\r\n//     return () => {\r\n//       window.removeEventListener('keydown', handleKeyDown);\r\n//       window.removeEventListener('keyup', handleKeyUp);\r\n//     };\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <canvas ref={canvasRef}></canvas>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CanvasDrawing;\r\n"],"mappings":"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;IAEDJ,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXF,MAAM,CAACO,mBAAmB,CAAC,SAAS,EAAEb,aAAa,CAAC;MACpDM,MAAM,CAACO,mBAAmB,CAAC,OAAO,EAAER,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3D,OAAA;IAAAoE,QAAA,eACEpE,OAAA;MAAQqE,GAAG,EAAEhD;IAAU;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACrD,EAAA,CAhKQD,aAAa;AAAAuD,EAAA,GAAbvD,aAAa;AAkKtB,eAAeA,aAAa;;AAK5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}