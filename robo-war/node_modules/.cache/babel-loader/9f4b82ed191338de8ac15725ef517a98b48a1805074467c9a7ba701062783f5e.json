{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Signup.jsx\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\n// import { Flex } from '@chakra-ui/react'\n// import { Container } from '@chakra-ui/react'\n// import {\n//     FormControl,\n//     FormLabel,\n//     FormErrorMessage,\n//     FormHelperText,\n//     Input,\n//   } from '@chakra-ui/react'\n\n//   export default function Signup(){\n//     const [user,setuser]=useState({\n//       username :\"\",\n//       email:\"\",\n//       createpassword :\"\",\n//       confirmpassword:\"\"\n//     })\n//     const handleClick=(e)=>{\n//       e.preventDefault();\n//       axios.post('/roboWar',user)\n//     }  \n\n//     return(\n//         <>\n//         <Container>\n//           <Flex color='white' align = \"centre\" >\n\n//                 <Box w='650px' >\n//     <FormControl >\n//         <FormLabel> Username</FormLabel>\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\n//             <FormLabel>Email</FormLabel>\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\n//             <FormLabel>Create Password</FormLabel>\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\n\n//             <FormLabel>Confirm Password</FormLabel>\n//             <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\n\n//         </FormControl>\n//   </Box>\n\n// </Flex>\n// </Container>\n\n//         <Button colorScheme='teal' size='lg' margin={'5'}\n//         onClick={handleClick}\n//         >Signup</Button>\n\n//         </>\n//         )\n//     };\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react';\nimport { Flex } from '@chakra-ui/react';\nimport { Container } from '@chakra-ui/react';\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText, Input } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [user, setuser] = useState({\n    username: \"\",\n    email: \"\",\n    createpassword: \"\",\n    confirmpassword: \"\"\n  });\n  const handleClick = e => {\n    e.preventDefault();\n\n    // Define custom headers\n    const headers = {\n      'Body': 'user',\n      'Content-Type': 'application/json',\n      // Specify the content type as JSON\n      'Authorization': 'Bearer YourAccessToken' // Add any other headers you need\n    };\n\n    // Make the POST request with headers\n    axios.post('/roboWar', {\n      headers\n    }).then(response => {\n      // Handle the response here\n      console.log('Response:', response.data);\n    }).catch(error => {\n      // Handle errors here\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        color: \"white\",\n        align: \"centre\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          w: \"650px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      size: \"lg\",\n      margin: '5',\n      onClick: handleClick,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Signup, \"O9Nhuvhn07UQpHYe5T3sbRQgd88=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["axios","React","useState","Box","Button","ButtonGroup","Stack","Flex","Container","FormControl","FormLabel","FormErrorMessage","FormHelperText","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","user","setuser","username","email","createpassword","confirmpassword","handleClick","e","preventDefault","headers","post","then","response","console","log","data","catch","error","children","color","align","w","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","size","margin","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Signup.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\r\n// import { Flex } from '@chakra-ui/react'\r\n// import { Container } from '@chakra-ui/react'\r\n// import {\r\n//     FormControl,\r\n//     FormLabel,\r\n//     FormErrorMessage,\r\n//     FormHelperText,\r\n//     Input,\r\n//   } from '@chakra-ui/react'\r\n\r\n\r\n//   export default function Signup(){\r\n//     const [user,setuser]=useState({\r\n//       username :\"\",\r\n//       email:\"\",\r\n//       createpassword :\"\",\r\n//       confirmpassword:\"\"\r\n//     })\r\n//     const handleClick=(e)=>{\r\n//       e.preventDefault();\r\n//       axios.post('/roboWar',user)\r\n//     }  \r\n\r\n//     return(\r\n//         <>\r\n//         <Container>\r\n//           <Flex color='white' align = \"centre\" >\r\n            \r\n//                 <Box w='650px' >\r\n//     <FormControl >\r\n//         <FormLabel> Username</FormLabel>\r\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\r\n//             <FormLabel>Email</FormLabel>\r\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\r\n//             <FormLabel>Create Password</FormLabel>\r\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\r\n            \r\n            \r\n            \r\n//             <FormLabel>Confirm Password</FormLabel>\r\n//             <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\r\n            \r\n\r\n            \r\n            \r\n\r\n            \r\n//         </FormControl>\r\n//   </Box>\r\n  \r\n  \r\n  \r\n// </Flex>\r\n// </Container>\r\n        \r\n        \r\n\r\n\r\n\r\n//         <Button colorScheme='teal' size='lg' margin={'5'}\r\n//         onClick={handleClick}\r\n//         >Signup</Button>\r\n\r\n\r\n        \r\n//         </>\r\n//         )\r\n//     };\r\n    \r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\r\nimport { Flex } from '@chakra-ui/react'\r\nimport { Container } from '@chakra-ui/react'\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Input,\r\n} from '@chakra-ui/react'\r\n\r\nexport default function Signup() {\r\n  const [user, setuser] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    createpassword: \"\",\r\n    confirmpassword: \"\"\r\n  })\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Define custom headers\r\n    const headers = {\r\n      'Body':'user',\r\n      'Content-Type': 'application/json', // Specify the content type as JSON\r\n      'Authorization': 'Bearer YourAccessToken', // Add any other headers you need\r\n    };\r\n\r\n    // Make the POST request with headers\r\n    axios.post('/roboWar',{ headers })\r\n      .then(response => {\r\n        // Handle the response here\r\n        console.log('Response:', response.data);\r\n      })\r\n      .catch(error => {\r\n        // Handle errors here\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Flex color='white' align=\"centre\">\r\n          <Box w='650px'>\r\n            \r\n          </Box>\r\n        </Flex>\r\n      </Container>\r\n\r\n      <Button colorScheme='teal' size='lg' margin={'5'} onClick={handleClick}>Signup</Button>\r\n    </>\r\n  )\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAOA;AACA;;AAIA;AACA;;AAMA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,MAAM,EAAEC,WAAW,EAAEC,KAAK,QAAQ,kBAAkB;AAClE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SACEC,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,KAAK,QACA,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC;IAC/BoB,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,EAAE;IAClBC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,OAAO,GAAG;MACd,MAAM,EAAC,MAAM;MACb,cAAc,EAAE,kBAAkB;MAAE;MACpC,eAAe,EAAE,wBAAwB,CAAE;IAC7C,CAAC;;IAED;IACA7B,KAAK,CAAC8B,IAAI,CAAC,UAAU,EAAC;MAAED;IAAQ,CAAC,CAAC,CAC/BE,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA,CAACP,SAAS;MAAA8B,QAAA,eACRvB,OAAA,CAACR,IAAI;QAACgC,KAAK,EAAC,OAAO;QAACC,KAAK,EAAC,QAAQ;QAAAF,QAAA,eAChCvB,OAAA,CAACZ,GAAG;UAACsC,CAAC,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEZ9B,OAAA,CAACX,MAAM;MAAC0C,WAAW,EAAC,MAAM;MAACC,IAAI,EAAC,IAAI;MAACC,MAAM,EAAE,GAAI;MAACC,OAAO,EAAEvB,WAAY;MAAAY,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACvF,CAAC;AAEP;AAAC1B,EAAA,CA3CuBD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}