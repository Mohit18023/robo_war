{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport spriteImage from './Images/background.png';\nimport { Center, Flex } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  let player;\n  let enemy;\n  let backgroundImage;\n  let timer;\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    }\n  };\n  let lastkey = ''; // Initialize lastkey with an empty string\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 576;\n    backgroundImage = new Image();\n    backgroundImage.src = spriteImage;\n    player = new Sprite({\n      position: {\n        x: 150,\n        y: 425\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      offset: {\n        x: 0,\n        y: 0\n      }\n    });\n    enemy = new Sprite({\n      position: {\n        x: 450,\n        y: 425\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      offset: {\n        x: 50,\n        y: 0\n      },\n      color: 'blue'\n    });\n    backgroundImage.onload = () => {\n      // Draw the background image\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n\n      // Draw the initial sprites\n      player.draw(ctx);\n      enemy.draw(ctx);\n    };\n\n    // Event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    function handleKeyDown(event) {\n      switch (event.key) {\n        case 'd':\n          keys.d.pressed = true;\n          lastkey = 'd';\n          break;\n        case 'a':\n          keys.a.pressed = true;\n          lastkey = 'a';\n          break;\n        case ' ':\n          player.attack();\n          break;\n        case 'ArrowRight':\n          keys.ArrowRight.pressed = true;\n          enemy.lastkey = 'ArrowRight';\n          break;\n        case 'ArrowLeft':\n          keys.ArrowLeft.pressed = true;\n          enemy.lastkey = 'ArrowLeft';\n          break;\n        case 'ArrowDown':\n          enemy.isAttacking = true;\n          break;\n      }\n    }\n    function handleKeyUp(event) {\n      switch (event.key) {\n        case 'd':\n          keys.d.pressed = false;\n          break;\n        case 'a':\n          keys.a.pressed = false;\n          break;\n        case 'ArrowRight':\n          keys.ArrowRight.pressed = false;\n          enemy.lastkey = 'ArrowRight';\n          break;\n        case 'ArrowLeft':\n          keys.ArrowLeft.pressed = false;\n          enemy.lastkey = 'ArrowLeft';\n          break;\n      }\n    }\n  }, []);\n  const gravity = 0.007;\n  class Sprite {\n    constructor({\n      position,\n      velocity,\n      color = 'red',\n      offset = {\n        x: 0,\n        y: 0\n      }\n    }) {\n      this.position = position;\n      this.velocity = velocity;\n      this.height = 150;\n      this.width = 50;\n      this.attackbox = {\n        position: {\n          x: this.position.x,\n          y: this.position.y\n        },\n        offset,\n        width: 100,\n        height: 50\n      };\n      this.isAttacking = '';\n      this.color = color;\n      this.health = 100;\n    }\n    draw(ctx) {\n      ctx.fillStyle = this.color;\n      ctx.fillRect(this.position.x, this.position.y, 50, this.height);\n      //attack box\n      if (this.isAttacking) {\n        ctx.fillStyle = 'green';\n        ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y, this.attackbox.width, this.attackbox.height);\n      }\n    }\n    update(ctx) {\n      this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\n      this.attackbox.position.y = this.position.y;\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n      if (this.position.y + this.height >= ctx.height) {\n        this.velocity.y = 0;\n        this.position.y = ctx.height - this.height;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n    attack() {\n      this.isAttacking = true;\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 100);\n    }\n  }\n  function rectangularCollision({\n    rectangle1,\n    rectangle2\n  }) {\n    return rectangle1.attackbox.position.x + rectangle1.attackbox.width >= rectangle2.position.x && rectangle1.attackbox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackbox.position.y + rectangle1.attackbox.height >= rectangle2.position.y && rectangle1.attackbox.position.y <= rectangle2.position.y + rectangle2.height;\n  }\n  function animate() {\n    const canvas = canvasRef.current;\n    if (canvas && player && enemy) {\n      const ctx = canvas.getContext('2d');\n\n      // Clear the canvas\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw the background image\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n\n      // Update and draw the sprites\n      player.update(canvas);\n      player.draw(ctx);\n      enemy.update(canvas);\n      enemy.draw(ctx);\n      player.velocity.x = 0;\n      enemy.velocity.x = 0;\n      if (keys.a.pressed && lastkey === 'a') {\n        player.velocity.x = -5;\n      } else if (keys.d.pressed && lastkey === 'd') {\n        player.velocity.x = 5;\n      }\n      if (keys.ArrowLeft.pressed && enemy.lastkey === 'ArrowLeft') {\n        enemy.velocity.x = -5;\n      } else if (keys.ArrowRight.pressed && enemy.lastkey === 'ArrowRight') {\n        enemy.velocity.x = 5;\n      }\n      // detect for collision\n      if (rectangularCollision({\n        rectangle1: player,\n        rectangle2: enemy\n      }) && player.isAttacking) {\n        player.isAttacking = false;\n        enemy.health -= 20;\n        document.querySelector('#enemyHealth').style.width = enemy.health + '%';\n        console.log('go');\n      }\n      if (rectangularCollision({\n        rectangle1: enemy,\n        rectangle2: player\n      }) && enemy.isAttacking) {\n        enemy.isAttacking = false;\n        player.health -= 20;\n        document.querySelector('#playerHealth').style.width = player.health + '%';\n        console.log('enemy attack successful');\n      }\n    }\n    window.requestAnimationFrame(animate);\n  }\n  useEffect(() => {\n    animate(); // Start the animation loop after the initial render\n  }, []);\n\n  //   return(\n  //      <canvas ref={canvasRef}\n  //      style = {{\n  //       boxSizing: 'border-box',\n  //     }}\n  //     {...props} \n  //     />\n  //     );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          height: '30px',\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'yellow',\n            height: '30px',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"playerHealth\",\n          style: {\n            position: 'absolute',\n            background: 'blue',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: true,\n        style: {\n          backgroundColor: 'red',\n          width: '100px',\n          height: '100px',\n          flexShrink: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: timer.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          height: '30px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'yellow',\n            height: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"enemyHealth\",\n          style: {\n            position: 'absolute',\n            background: 'blue',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        boxSizing: 'border-box'\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 3\n  }, this);\n};\n_s(Canvas, \"1O11hef6JMAr7xpSnL0aZ5Ib60Q=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","spriteImage","Center","Flex","jsxDEV","_jsxDEV","Canvas","props","_s","canvasRef","player","enemy","backgroundImage","timer","keys","a","pressed","d","ArrowRight","ArrowLeft","lastkey","canvas","current","ctx","getContext","width","height","Image","src","Sprite","position","x","y","velocity","offset","color","onload","drawImage","draw","window","addEventListener","handleKeyDown","handleKeyUp","event","key","attack","isAttacking","gravity","constructor","attackbox","health","fillStyle","fillRect","update","setTimeout","rectangularCollision","rectangle1","rectangle2","animate","document","querySelector","style","console","log","requestAnimationFrame","display","children","alignItems","padding","justifyContent","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","id","background","top","right","bottom","flexShrink","value","left","ref","boxSizing","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Canvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport spriteImage from './Images/background.png';\r\nimport { Center, Flex } from '@chakra-ui/react';\r\n\r\nconst Canvas = (props) => {\r\n  const canvasRef = useRef(null);\r\n  let player;\r\n  let enemy;\r\n  let backgroundImage;\r\n  let timer;\r\n  const keys = {\r\n    a: {\r\n      pressed: false,\r\n    },\r\n    d: {\r\n      pressed: false,\r\n    },\r\n    ArrowRight: {\r\n      pressed: false,\r\n    },\r\n    ArrowLeft: {\r\n      pressed: false,\r\n    },\r\n  };\r\n  let lastkey = ''; // Initialize lastkey with an empty string\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = 1024;\r\n    canvas.height = 576;\r\n\r\n    backgroundImage = new Image();\r\n    backgroundImage.src = spriteImage;\r\n\r\n    player = new Sprite({\r\n      position: { x: 150, y: 425 },\r\n      velocity: { x: 0, y: 0 },\r\n      offset: {\r\n        x:0,\r\n        y: 0\r\n      }\r\n    });\r\n\r\n    enemy = new Sprite({\r\n      position: { x: 450, y: 425 },\r\n      velocity: { x: 0, y: 0 },\r\n      offset: {\r\n        x:50,\r\n        y:0\r\n      },\r\n      color: 'blue'\r\n\r\n    });\r\n\r\n    backgroundImage.onload = () => {\r\n      // Draw the background image\r\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw the initial sprites\r\n      player.draw(ctx);\r\n      enemy.draw(ctx);\r\n    };\r\n\r\n    // Event listeners\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    function handleKeyDown(event) {\r\n      switch (event.key) {\r\n        case 'd':\r\n          keys.d.pressed = true;\r\n          lastkey = 'd';\r\n          break;\r\n        case 'a':\r\n          keys.a.pressed = true;\r\n          lastkey = 'a';\r\n          break;\r\n          case ' ':\r\n            player.attack()  \r\n            break;\r\n        case 'ArrowRight':\r\n          keys.ArrowRight.pressed = true;\r\n          enemy.lastkey = 'ArrowRight';\r\n          break;\r\n          case 'ArrowLeft':\r\n          keys.ArrowLeft.pressed = true;\r\n          enemy.lastkey = 'ArrowLeft';\r\n          break;\r\n          case 'ArrowDown':\r\n            enemy.isAttacking = true;\r\n            break\r\n      }\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.key) {\r\n        case 'd':\r\n          keys.d.pressed = false;\r\n          break;\r\n        case 'a':\r\n          keys.a.pressed = false;\r\n          break;\r\n        case 'ArrowRight':\r\n          keys.ArrowRight.pressed = false;\r\n          enemy.lastkey = 'ArrowRight';\r\n          break;\r\n          case 'ArrowLeft':\r\n          keys.ArrowLeft.pressed = false;\r\n          enemy.lastkey = 'ArrowLeft';\r\n          break;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const gravity = 0.007;\r\n\r\n  class Sprite {\r\n    constructor({ position, velocity,color = 'red', offset= { x: 0, y: 0 } }) {\r\n      this.position = position;\r\n      this.velocity = velocity;\r\n      this.height = 150;\r\n      this.width = 50;\r\n      this.attackbox = {\r\n        position: {\r\n          x:this.position.x,\r\n          y:this.position.y\r\n        },\r\n        offset,\r\n        \r\n        width: 100 ,\r\n        height: 50\r\n      }\r\n      this.isAttacking = '';\r\n      this.color = color;\r\n      this.health = 100\r\n    }\r\n\r\n    draw(ctx) {\r\n      ctx.fillStyle = this.color;\r\n      ctx.fillRect(this.position.x, this.position.y, 50, this.height);\r\n      //attack box\r\n      if (this.isAttacking) {\r\n\r\n      \r\n      ctx.fillStyle = 'green';\r\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\r\n    }\r\n  }\r\n\r\n    update(ctx) {\r\n      this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\r\n      this.attackbox.position.y = this.position.y;\r\n\r\n      this.position.x += this.velocity.x;\r\n      this.position.y += this.velocity.y;\r\n      if (this.position.y + this.height >= ctx.height) {\r\n        this.velocity.y = 0;\r\n        this.position.y = ctx.height - this.height;\r\n      } else {\r\n        this.velocity.y += gravity;\r\n      }\r\n    }\r\n      attack() {\r\n        this.isAttacking = true\r\n        setTimeout(() => {\r\n          this.isAttacking = false\r\n        }, 100\r\n        );\r\n        \r\n      \r\n    }\r\n  }\r\n\r\n  \r\n  function rectangularCollision({rectangle1, rectangle2\r\n  }) {\r\n\r\n    \r\n    return (\r\n      rectangle1.attackbox.position.x + rectangle1.attackbox.width >= \r\n      rectangle2.position.x && rectangle1.attackbox.position.x <= rectangle2.position.x + rectangle2.width &&\r\n        rectangle1.attackbox.position.y + rectangle1.attackbox.height >= rectangle2.position.y\r\n        && rectangle1.attackbox.position.y <= rectangle2.position.y + rectangle2.height\r\n\r\n    );\r\n  }\r\n  function animate() {\r\n    const canvas = canvasRef.current;\r\n\r\n     if (canvas && player && enemy) {\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      // Clear the canvas\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw the background image\r\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Update and draw the sprites\r\n      player.update(canvas);\r\n      player.draw(ctx);\r\n\r\n      enemy.update(canvas);\r\n      enemy.draw(ctx);\r\n\r\n      player.velocity.x = 0;\r\n      enemy.velocity.x = 0;\r\n\r\n\r\n      if (keys.a.pressed && lastkey === 'a') {\r\n        player.velocity.x = -5;\r\n      } else if (keys.d.pressed && lastkey === 'd') {\r\n        player.velocity.x = 5;\r\n      }\r\n      if (keys.ArrowLeft.pressed && enemy.lastkey === 'ArrowLeft') {\r\n        enemy.velocity.x = -5;\r\n      } else if (keys.ArrowRight.pressed && enemy.lastkey === 'ArrowRight') {\r\n        enemy.velocity.x = 5;\r\n      }\r\n      // detect for collision\r\n      if (rectangularCollision({\r\n        rectangle1: player,\r\n        rectangle2: enemy\r\n      }) &&\r\n        player.isAttacking) {\r\n          player.isAttacking = false\r\n          enemy.health -= 20\r\n        document.querySelector('#enemyHealth').style.width = enemy.health + '%'\r\n        console.log('go');\r\n      }\r\n      \r\n      if (rectangularCollision({\r\n        rectangle1: enemy,\r\n        rectangle2: player\r\n      }) &&\r\n        enemy.isAttacking) {\r\n          enemy.isAttacking = false\r\n          player.health -= 20\r\n            document.querySelector('#playerHealth').style.width = player.health + '%'\r\n        console.log('enemy attack successful');\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  useEffect(() => {\r\n    animate(); // Start the animation loop after the initial render\r\n  }, []);\r\n\r\n//   return(\r\n//      <canvas ref={canvasRef}\r\n//      style = {{\r\n//       boxSizing: 'border-box',\r\n//     }}\r\n//     {...props} \r\n//     />\r\n//     );\r\n// };\r\n\r\nreturn (\r\n  <div style={{ position: 'relative', display: 'inline-block' }}>\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n      }}\r\n    >\r\n      {/* Player Health Bar */}\r\n      <div style={{ position: 'relative', height: '30px', width: '100%', display: 'flex', justifyContent: 'flex-end' }}>\r\n        <div style={{ backgroundColor: 'yellow', height: '30px', width: '100%' }}></div>\r\n        <div\r\n          id=\"playerHealth\"\r\n          style={{\r\n            position: 'absolute',\r\n            background: 'blue',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            width: '100%',\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* Timer */}\r\n      <div\r\n      id \r\n       style={{ \r\n        backgroundColor: 'red', \r\n        width: '100px', \r\n        height: '100px', \r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        }}\r\n      >\r\n        {timer.value}\r\n      </div>\r\n\r\n      {/* Enemy Health Bar */}\r\n      <div style={{ position: 'relative', height: '30px', width: '100%' }}>\r\n        <div style={{ backgroundColor: 'yellow', height: '30px' }}></div>\r\n        <div\r\n          id=\"enemyHealth\"\r\n          style={{\r\n            position: 'absolute',\r\n            background: 'blue',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n    <canvas ref={canvasRef} style={{ boxSizing: 'border-box' }} {...props} />\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}