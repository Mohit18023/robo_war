{"ast":null,"code":"// animationFrame.js\n\nclass AnimationFrame {\n  constructor(options) {\n    this.image = options.image; // The sprite sheet image\n    this.frameWidth = options.frameWidth; // Width of a single frame in pixels\n    this.frameHeight = options.frameHeight; // Height of a single frame in pixels\n    this.totalFrames = options.totalFrames; // Total number of frames in the animation\n    this.animationSpeed = options.animationSpeed; // Speed of the animation (frames per second)\n\n    this.currentFrame = 0; // Current frame\n    this.frameCounter = 0; // Frame counter for timing\n\n    this.animationInterval = 1000 / this.animationSpeed; // Interval between frames (in milliseconds)\n  }\n\n  draw(ctx, x, y) {\n    // Draw the current frame on the canvas\n    ctx.drawImage(this.image, this.currentFrame * this.frameWidth,\n    // X position of the current frame in the sprite sheet\n    0,\n    // Y position in the sprite sheet (0 for a horizontal sprite sheet)\n    this.frameWidth, this.frameHeight, x, y, this.frameWidth, this.frameHeight);\n\n    // Update the frame counter\n    this.frameCounter++;\n\n    // If it's time to advance to the next frame, do so\n    if (this.frameCounter >= this.animationInterval) {\n      this.currentFrame = (this.currentFrame + 1) % this.totalFrames; // Loop back to the first frame if necessary\n      this.frameCounter = 0; // Reset the frame counter\n    }\n  }\n}\n\nexport { AnimationFrame };","map":{"version":3,"names":["AnimationFrame","constructor","options","image","frameWidth","frameHeight","totalFrames","animationSpeed","currentFrame","frameCounter","animationInterval","draw","ctx","x","y","drawImage"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/AnimationFrame.js"],"sourcesContent":["// animationFrame.js\r\n\r\nclass AnimationFrame {\r\n    constructor(options) {\r\n      this.image = options.image; // The sprite sheet image\r\n      this.frameWidth = options.frameWidth; // Width of a single frame in pixels\r\n      this.frameHeight = options.frameHeight; // Height of a single frame in pixels\r\n      this.totalFrames = options.totalFrames; // Total number of frames in the animation\r\n      this.animationSpeed = options.animationSpeed; // Speed of the animation (frames per second)\r\n  \r\n      this.currentFrame = 0; // Current frame\r\n      this.frameCounter = 0; // Frame counter for timing\r\n  \r\n      this.animationInterval = 1000 / this.animationSpeed; // Interval between frames (in milliseconds)\r\n    }\r\n  \r\n    draw(ctx, x, y) {\r\n      // Draw the current frame on the canvas\r\n      ctx.drawImage(\r\n        this.image,\r\n        this.currentFrame * this.frameWidth, // X position of the current frame in the sprite sheet\r\n        0, // Y position in the sprite sheet (0 for a horizontal sprite sheet)\r\n        this.frameWidth,\r\n        this.frameHeight,\r\n        x,\r\n        y,\r\n        this.frameWidth,\r\n        this.frameHeight\r\n      );\r\n  \r\n      // Update the frame counter\r\n      this.frameCounter++;\r\n  \r\n      // If it's time to advance to the next frame, do so\r\n      if (this.frameCounter >= this.animationInterval) {\r\n        this.currentFrame = (this.currentFrame + 1) % this.totalFrames; // Loop back to the first frame if necessary\r\n        this.frameCounter = 0; // Reset the frame counter\r\n      }\r\n    }\r\n  }\r\n  \r\n  export { AnimationFrame };\r\n  "],"mappings":"AAAA;;AAEA,MAAMA,cAAc,CAAC;EACjBC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAC,CAAC;IAC5B,IAAI,CAACC,UAAU,GAAGF,OAAO,CAACE,UAAU,CAAC,CAAC;IACtC,IAAI,CAACC,WAAW,GAAGH,OAAO,CAACG,WAAW,CAAC,CAAC;IACxC,IAAI,CAACC,WAAW,GAAGJ,OAAO,CAACI,WAAW,CAAC,CAAC;IACxC,IAAI,CAACC,cAAc,GAAGL,OAAO,CAACK,cAAc,CAAC,CAAC;;IAE9C,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC;IACvB,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC;;IAEvB,IAAI,CAACC,iBAAiB,GAAG,IAAI,GAAG,IAAI,CAACH,cAAc,CAAC,CAAC;EACvD;;EAEAI,IAAIA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACd;IACAF,GAAG,CAACG,SAAS,CACX,IAAI,CAACZ,KAAK,EACV,IAAI,CAACK,YAAY,GAAG,IAAI,CAACJ,UAAU;IAAE;IACrC,CAAC;IAAE;IACH,IAAI,CAACA,UAAU,EACf,IAAI,CAACC,WAAW,EAChBQ,CAAC,EACDC,CAAC,EACD,IAAI,CAACV,UAAU,EACf,IAAI,CAACC,WACP,CAAC;;IAED;IACA,IAAI,CAACI,YAAY,EAAE;;IAEnB;IACA,IAAI,IAAI,CAACA,YAAY,IAAI,IAAI,CAACC,iBAAiB,EAAE;MAC/C,IAAI,CAACF,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY,GAAG,CAAC,IAAI,IAAI,CAACF,WAAW,CAAC,CAAC;MAChE,IAAI,CAACG,YAAY,GAAG,CAAC,CAAC,CAAC;IACzB;EACF;AACF;;AAEA,SAAST,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}