{"ast":null,"code":"// // import { player, enemy } from './CanvasGame';\n\n// function rectangularCollision({ rectangle1, rectangle2,player,enemy }) {\n//     return (\n//       rectangle1.attackBox.position.x + rectangle1.attackBox.width >=\n//         rectangle2.position.x &&\n//       rectangle1.attackBox.position.x <=\n//         rectangle2.position.x + rectangle2.width &&\n//       rectangle1.attackBox.position.y + rectangle1.attackBox.height >=\n//         rectangle2.position.y &&\n//       rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\n//     )\n//   }\n\n//   function determineWinner({ player, enemy, timerId }) {\n//     clearTimeout(timerId)\n//     document.querySelector('#displayText').style.display = 'flex'\n//     if (player.health === enemy.health) {\n//       document.querySelector('#displayText').innerHTML = 'Tie'\n//     } else if (player.health > enemy.health) {\n//       document.querySelector('#displayText').innerHTML = 'Player 1 Wins'\n//     } else if (player.health < enemy.health) {\n//       document.querySelector('#displayText').innerHTML = 'Player 2 Wins'\n//     }\n//   }\n\n//   let timer = 60\n//   let timerId\n//   function decreaseTimer() {\n//     if (timer > 0) {\n//       timerId = setTimeout(decreaseTimer, 1000)\n//       timer--\n//       document.querySelector('#timer').innerHTML = timer\n//     }\n\n//     if (timer === 0) {\n//       determineWinner({ player, enemy, timerId })\n//     }\n//   }\n\n//   export { rectangularCollision, determineWinner, timer, timerId, decreaseTimer };","map":{"version":3,"names":[],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/utils.js"],"sourcesContent":["// // import { player, enemy } from './CanvasGame';\r\n\r\n// function rectangularCollision({ rectangle1, rectangle2,player,enemy }) {\r\n//     return (\r\n//       rectangle1.attackBox.position.x + rectangle1.attackBox.width >=\r\n//         rectangle2.position.x &&\r\n//       rectangle1.attackBox.position.x <=\r\n//         rectangle2.position.x + rectangle2.width &&\r\n//       rectangle1.attackBox.position.y + rectangle1.attackBox.height >=\r\n//         rectangle2.position.y &&\r\n//       rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\r\n//     )\r\n//   }\r\n  \r\n//   function determineWinner({ player, enemy, timerId }) {\r\n//     clearTimeout(timerId)\r\n//     document.querySelector('#displayText').style.display = 'flex'\r\n//     if (player.health === enemy.health) {\r\n//       document.querySelector('#displayText').innerHTML = 'Tie'\r\n//     } else if (player.health > enemy.health) {\r\n//       document.querySelector('#displayText').innerHTML = 'Player 1 Wins'\r\n//     } else if (player.health < enemy.health) {\r\n//       document.querySelector('#displayText').innerHTML = 'Player 2 Wins'\r\n//     }\r\n//   }\r\n  \r\n//   let timer = 60\r\n//   let timerId\r\n//   function decreaseTimer() {\r\n//     if (timer > 0) {\r\n//       timerId = setTimeout(decreaseTimer, 1000)\r\n//       timer--\r\n//       document.querySelector('#timer').innerHTML = timer\r\n//     }\r\n  \r\n//     if (timer === 0) {\r\n//       determineWinner({ player, enemy, timerId })\r\n//     }\r\n//   }\r\n\r\n//   export { rectangularCollision, determineWinner, timer, timerId, decreaseTimer };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}