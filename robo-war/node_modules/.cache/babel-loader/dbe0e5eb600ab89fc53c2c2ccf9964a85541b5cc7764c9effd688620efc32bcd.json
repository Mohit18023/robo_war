{"ast":null,"code":"class Sprite {\n  constructor({\n    position,\n    imageSrc\n  }) {\n    this.position = position;\n    this.height = 150;\n    this.width = 50;\n    this.image;\n  }\n  draw() {}\n  update(ctx) {\n    this.draw();\n  }\n}\nclass Fighter {\n  constructor({\n    position,\n    velocity,\n    color = 'red',\n    offset = {\n      x: 0,\n      y: 0\n    }\n  }) {\n    this.position = position;\n    this.velocity = velocity;\n    this.height = 150;\n    this.width = 50;\n    this.attackbox = {\n      position: {\n        x: this.position.x,\n        y: this.position.y\n      },\n      offset,\n      width: 100,\n      height: 50\n    };\n    this.isAttacking = '';\n    this.color = color;\n    this.health = 100;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.position.x, this.position.y, 50, this.height);\n    //attack box\n    if (this.isAttacking) {\n      ctx.fillStyle = 'green';\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y, this.attackbox.width, this.attackbox.height);\n    }\n  }\n  update(ctx) {\n    this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\n    this.attackbox.position.y = this.position.y;\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n    if (this.position.y + this.height >= ctx.height) {\n      this.velocity.y = 0;\n      this.position.y = ctx.height - this.height;\n    } else {\n      this.velocity.y += gravity;\n    }\n  }\n  attack() {\n    this.isAttacking = true;\n    setTimeout(() => {\n      this.isAttacking = false;\n    }, 100);\n  }\n}","map":{"version":3,"names":["Sprite","constructor","position","imageSrc","height","width","image","draw","update","ctx","Fighter","velocity","color","offset","x","y","attackbox","isAttacking","health","fillStyle","fillRect","gravity","attack","setTimeout"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/classes.js"],"sourcesContent":["class Sprite {\r\n  constructor({ position, imageSrc }) {\r\n    this.position = position;\r\n    this.height = 150;\r\n    this.width = 50;\r\n    this.image \r\n  }\r\n\r\n  draw() {\r\n}\r\n\r\n  update(ctx) {\r\n    this.draw();\r\n  }\r\n  }\r\n\r\n  class Fighter {\r\n    constructor({ position, velocity,color = 'red', offset= { x: 0, y: 0 } }) {\r\n      this.position = position;\r\n      this.velocity = velocity;\r\n      this.height = 150;\r\n      this.width = 50;\r\n      this.attackbox = {\r\n        position: {\r\n          x:this.position.x,\r\n          y:this.position.y\r\n        },\r\n        offset,\r\n        \r\n        width: 100 ,\r\n        height: 50\r\n      }\r\n      this.isAttacking = '';\r\n      this.color = color;\r\n      this.health = 100\r\n    }\r\n\r\n    draw(ctx) {\r\n      ctx.fillStyle = this.color;\r\n      ctx.fillRect(this.position.x, this.position.y, 50, this.height);\r\n      //attack box\r\n      if (this.isAttacking) {\r\n\r\n      \r\n      ctx.fillStyle = 'green';\r\n      ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\r\n    }\r\n  }\r\n\r\n    update(ctx) {\r\n      this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\r\n      this.attackbox.position.y = this.position.y;\r\n\r\n      this.position.x += this.velocity.x;\r\n      this.position.y += this.velocity.y;\r\n      if (this.position.y + this.height >= ctx.height) {\r\n        this.velocity.y = 0;\r\n        this.position.y = ctx.height - this.height;\r\n      } else {\r\n        this.velocity.y += gravity;\r\n      }\r\n    }\r\n      attack() {\r\n        this.isAttacking = true\r\n        setTimeout(() => {\r\n          this.isAttacking = false\r\n        }, 100);\r\n      }\r\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}