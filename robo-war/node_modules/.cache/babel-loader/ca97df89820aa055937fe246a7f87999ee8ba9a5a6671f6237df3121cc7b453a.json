{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport Weapons from './Weapons';\nimport RobotFace from './RobotFace.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [weapons, setWeapons] = useState([]);\n  const [robotPosition, setRobotPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const initialWeapons = [{\n      x: 100,\n      y: 100,\n      type: 'laser-gun'\n    }, {\n      x: 200,\n      y: 200,\n      type: 'rocket-launcher'\n    }\n    // Add more weapons\n    ];\n\n    setWeapons(initialWeapons);\n\n    // Handle robot movements here based on user input\n    // You'll need to add event listeners for arrow key presses\n    const handleKeyPress = event => {\n      weapons.forEach((weapon, index) => {\n        const dx = robotPosition.x - weapon.x;\n        const dy = robotPosition.y - weapon.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < 20) {\n          // Robot is within range of a weapon (adjust the pickup range as needed)\n          // Collect the weapon by removing it from the weapons array\n          const updatedWeapons = [...weapons];\n          updatedWeapons.splice(index, 1);\n          setWeapons(updatedWeapons);\n        }\n      });\n      switch (event.key) {\n        case 'ArrowUp':\n          setRobotPosition(prevPosition => ({\n            ...prevPosition,\n            y: prevPosition.y - 10\n          }));\n          break;\n        case 'ArrowDown':\n          setRobotPosition(prevPosition => ({\n            ...prevPosition,\n            y: prevPosition.y + 10\n          }));\n          break;\n        case 'ArrowLeft':\n          setRobotPosition(prevPosition => ({\n            ...prevPosition,\n            x: prevPosition.x - 10\n          }));\n          break;\n        case 'ArrowRight':\n          setRobotPosition(prevPosition => ({\n            ...prevPosition,\n            x: prevPosition.x + 10\n          }));\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: weapons.map((weapon, index) => /*#__PURE__*/_jsxDEV(Weapons, {\n        x: weapon.x,\n        y: weapon.y,\n        type: weapon.type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RobotFace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"robot\",\n      style: {\n        left: `${robotPosition.x}px`,\n        top: `${robotPosition.y}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"XHNQH6ffc1fii0ZwFpMWpSy4p64=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Weapons","RobotFace","jsxDEV","_jsxDEV","Game","_s","weapons","setWeapons","robotPosition","setRobotPosition","x","y","initialWeapons","type","handleKeyPress","event","forEach","weapon","index","dx","dy","distance","Math","sqrt","updatedWeapons","splice","key","prevPosition","window","addEventListener","removeEventListener","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","style","left","top","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Game.jsx"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Game.css';\r\nimport Weapons from './Weapons';\r\nimport RobotFace from './RobotFace.jsx'\r\nfunction Game() {\r\n  const [weapons, setWeapons] = useState([]);\r\n  const [robotPosition, setRobotPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const initialWeapons = [\r\n      { x: 100, y: 100, type: 'laser-gun' },\r\n      { x: 200, y: 200, type: 'rocket-launcher' },\r\n      // Add more weapons\r\n    ];\r\n    setWeapons(initialWeapons);\r\n\r\n    \r\n    // Handle robot movements here based on user input\r\n    // You'll need to add event listeners for arrow key presses\r\n        const handleKeyPress = (event) => {\r\n          weapons.forEach((weapon, index) => {\r\n            const dx = robotPosition.x - weapon.x;\r\n            const dy = robotPosition.y - weapon.y;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            if (distance < 20) {\r\n              // Robot is within range of a weapon (adjust the pickup range as needed)\r\n              // Collect the weapon by removing it from the weapons array\r\n              const updatedWeapons = [...weapons];\r\n              updatedWeapons.splice(index, 1);\r\n              setWeapons(updatedWeapons);\r\n            }\r\n           });\r\n\r\n          switch (event.key) {\r\n            case 'ArrowUp':\r\n              setRobotPosition((prevPosition) => ({ ...prevPosition, y: prevPosition.y - 10 }));\r\n              break;\r\n            case 'ArrowDown':\r\n              setRobotPosition((prevPosition) => ({ ...prevPosition, y: prevPosition.y + 10 }));\r\n              break;\r\n            case 'ArrowLeft':\r\n              setRobotPosition((prevPosition) => ({ ...prevPosition, x: prevPosition.x - 10 }));\r\n              break;\r\n            case 'ArrowRight':\r\n              setRobotPosition((prevPosition) => ({ ...prevPosition, x: prevPosition.x + 10 }));\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        };\r\n      \r\n        window.addEventListener('keydown', handleKeyPress);\r\n      \r\n        return () => {\r\n          window.removeEventListener('keydown', handleKeyPress);\r\n        };\r\n          \r\n       \r\n      }, []);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        {/* Render the game board */}\r\n        {weapons.map((weapon, index) => (\r\n    <Weapons \r\n      key={index}\r\n      x={weapon.x}\r\n      y={weapon.y}\r\n      type={weapon.type}\r\n    />\r\n  ))}\r\n      </div>\r\n      <RobotFace />\r\n      <div\r\n        className=\"robot\"\r\n        style={{ left: `${robotPosition.x}px`, top: `${robotPosition.y}px` }}\r\n      >\r\n        \r\n        {/* Render the robot */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}