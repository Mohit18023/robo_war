{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Log.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from \"axios\";\n// import {\n//   Box,\n//   Button,\n//   Flex,\n//   Container,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   Stack,\n//   useToast,\n//   InputGroup,\n//   InputRightElement,\n//   Text,\n// } from '@chakra-ui/react';\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\n// import { ViewIcon, ViewOffIcon } from  '@chakra-ui/icons';\n// import { useNavigate } from 'react-router-dom';\n\n//   const ding=(e)=>{\n//     const sound=new Audio(clicksound);\n//     sound.play();\n//    }\n\n//   export default function Log(){\n//     const [password, setPassword] = useState();\n//     const [show, setShow] = useState(false);\n//     const [email, setEmail] = useState();\n//     const [loading, setLoading] = useState(false);\n//     const toast = useToast();\n//     const navigation = useNavigate();\n\n//     const handleClick = () => setShow(!show);\n//     const submitHandler = async () => {\n//       setLoading(true);\n//       if (!email || !password) {\n//         toast({\n//           title: 'Please fill all the fields',\n//           status: 'warning',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//         setLoading(false);\n//         return;\n//       }\n//       try {\n//         const config = {\n//           headers: {\n//             \"Content-type\": \"application/json\",\n//           },\n//         };\n//         const response = await axios.post(\n//           \"http://127.0.0.1:5000/roboWar/auth/login\",\n//           { email, password },\n//           config\n//         );\n\n//         toast({\n//           title: 'Login Successful',\n//           status: 'success',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\n//       } catch (err) {\n//         toast({\n//           title: 'Error Occurred!',\n//           description: err.response.data.message,\n//           status: 'error',\n//           duration: 5000,\n//           isClosable: true,\n//           position: 'top',\n//         });\n//       }\n//        setLoading(false);\n//        navigation('/Main');\n//     };\n\n//     return(\n//      <>\n//         <Container>\n//         <Flex color='white'>\n//         <Box w='5750px'>\n\n//         <FormControl isRequired>\n//             <FormLabel>Email</FormLabel>\n//         <Input\n//         onClick={ding}\n//           placeholder=\"Enter your name\"\n//           bg={email ? \"gray.50\" : \"white\"}\n//           color=\"black\"\n//           _hover={{ borderColor: \"black\" }}\n//           borderColor=\"black\"\n//           onChange={(event) => {\n//             setEmail(event.target.value);\n//           }}\n//           value={email}\n//         />\n//         </FormControl>\n\n//         <FormControl id=\"password\" isRequired>\n//         <FormLabel>Password</FormLabel>\n//         <InputGroup>\n//         <Input\n//         onClick={ding}\n//           placeholder=\"Enter your password\"\n//           bg={password ? \"gray.50\" : \"white\"}\n//           color=\"black\"\n//           _hover={{ borderColor: \"black\" }}\n//           borderColor=\"black\"\n//           onChange={(event) => {\n//             setPassword(event.target.value);\n//           }}\n//           value={password}\n//         />\n//         <InputRightElement w=\"4.5em\">\n//             <Button h=\"1.75em\" size=\"sm\" onClick={handleClick} color=\"black\">\n//               {show ? <ViewOffIcon /> : <ViewIcon />}\n//             </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//         </FormControl>\n\n//         </Box>\n//         </Flex>\n\n//         <Button\n//         colorScheme=\"teal\"\n//         size=\"lg\"\n//         margin={'5'}\n//         color=\"white\"\n//         fontWeight=\"bold\"\n//         borderRadius=\"md\"\n//         bgGradient=\"linear(to-r, teal.500, green.500)\"\n//         _hover={{\n//           bgGradient: 'linear(to-r, red.500, yellow.500)',\n//         }}\n//         style={{ marginTop: 15 }}\n//         onClick={() => {\n//           ding(); // Play sound effect\n//           submitHandler(); // Handle form submission\n//         }}\n//         isLoading={loading}\n//         >\n//           Login\n//         </Button>\n\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\n//             <Button fontWeight={'bold'} colorScheme='red' variant='link' onClick={ding}>\n//       Forgot Password?\n//             </Button>\n//             <Button fontWeight={'bold'} colorScheme='blue' variant='outline' onClick={ding}>\n//               Help\n//             </Button>\n//         </Stack>\n//         </Container>\n//         </>\n//         )\n//     };\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Box, Button, Flex, Container, FormControl, FormLabel, Input, Stack, useToast, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport lightgreenblue from \"./lightgreenblue.png\";\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport clicksound from './Sounds/Click - Sound Effect.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ding = e => {\n  const sound = new Audio(clicksound);\n  sound.play();\n};\nexport default function Log() {\n  _s();\n  const [password, setPassword] = useState();\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState();\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const navigat = useNavigate();\n  const handleClick = () => setShow(!show);\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: 'Please fill all the fields',\n        status: 'warning',\n        duration: 5000,\n        isClosable: true,\n        position: 'top'\n      });\n      setLoading(false);\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const response = await axios.post(\"http://127.0.0.1:5000/roboWar/auth/login\", {\n        email,\n        password\n      }, config);\n      toast({\n        title: 'Login Successful',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n        position: 'top'\n      });\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n      // localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/Main\");\n    } catch (err) {\n      toast({\n        title: 'Error Occurred!',\n        description: err.response.data.message,\n        // description: err.response ? err.response.data.message : 'Unknown error',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n        position: 'top'\n      });\n    }\n    setLoading(false);\n    navigation('/Main');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        color: \"white\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          w: \"5750px\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onClick: ding,\n              placeholder: \"Enter your email\",\n              bg: email ? \"gray.50\" : \"white\",\n              color: \"black\",\n              _hover: {\n                borderColor: \"black\"\n              },\n              borderColor: \"black\",\n              onChange: event => {\n                setEmail(event.target.value);\n              },\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                onClick: ding,\n                type: show ? \"text\" : \"password\",\n                placeholder: \"Enter your password\",\n                bg: password ? \"gray.50\" : \"white\",\n                color: \"black\",\n                _hover: {\n                  borderColor: \"black\"\n                },\n                borderColor: \"black\",\n                onChange: event => {\n                  setPassword(event.target.value);\n                },\n                value: password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                w: \"4.5em\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  h: \"1.75em\",\n                  size: \"sm\",\n                  onClick: handleClick,\n                  color: \"black\",\n                  children: show ? /*#__PURE__*/_jsxDEV(ViewOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        size: \"lg\",\n        margin: '5',\n        color: \"black\",\n        fontWeight: \"bold\",\n        borderRadius: \"md\",\n        bgGradient: \"linear(to-r, teal.500, green.500)\",\n        _hover: {\n          bgGradient: 'linear(to-r, red.500, yellow.500)'\n        },\n        style: {\n          marginTop: 15\n        },\n        onClick: () => {\n          ding(); // Play sound effect\n          submitHandler(); // Handle form submission\n        },\n\n        isLoading: loading,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 4,\n        align: \"center\",\n        margin: '20px',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fontWeight: 'bold',\n          colorScheme: \"red\",\n          variant: \"link\",\n          onClick: ding,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fontWeight: 'bold',\n          colorScheme: \"blue\",\n          variant: \"outline\",\n          onClick: ding,\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Log, \"nwiWAqxjWZp5zI0TV3r8Y3Tgw10=\", false, function () {\n  return [useToast, useNavigate];\n});\n_c = Log;\n;\nvar _c;\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"names":["React","useState","axios","Box","Button","Flex","Container","FormControl","FormLabel","Input","Stack","useToast","InputGroup","InputRightElement","lightgreenblue","ViewIcon","ViewOffIcon","Navigate","useNavigate","clicksound","jsxDEV","_jsxDEV","Fragment","_Fragment","ding","e","sound","Audio","play","Log","_s","password","setPassword","show","setShow","email","setEmail","loading","setLoading","toast","navigat","handleClick","submitHandler","title","status","duration","isClosable","position","config","headers","response","post","localStorage","setItem","JSON","stringify","data","navigate","err","description","message","navigation","children","color","w","isRequired","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","bg","_hover","borderColor","onChange","event","target","value","id","type","h","size","colorScheme","margin","fontWeight","borderRadius","bgGradient","style","marginTop","isLoading","direction","spacing","align","variant","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Log.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from \"axios\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Flex,\r\n//   Container,\r\n//   FormControl,\r\n//   FormLabel,\r\n//   Input,\r\n//   Stack,\r\n//   useToast,\r\n//   InputGroup,\r\n//   InputRightElement,\r\n//   Text,\r\n// } from '@chakra-ui/react';\r\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\r\n// import { ViewIcon, ViewOffIcon } from  '@chakra-ui/icons';\r\n// import { useNavigate } from 'react-router-dom';\r\n  \r\n\r\n//   const ding=(e)=>{\r\n//     const sound=new Audio(clicksound);\r\n//     sound.play();\r\n//    }\r\n\r\n//   export default function Log(){\r\n//     const [password, setPassword] = useState();\r\n//     const [show, setShow] = useState(false);\r\n//     const [email, setEmail] = useState();\r\n//     const [loading, setLoading] = useState(false);\r\n//     const toast = useToast();\r\n//     const navigation = useNavigate();\r\n    \r\n//     const handleClick = () => setShow(!show);\r\n//     const submitHandler = async () => {\r\n//       setLoading(true);\r\n//       if (!email || !password) {\r\n//         toast({\r\n//           title: 'Please fill all the fields',\r\n//           status: 'warning',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n//       try {\r\n//         const config = {\r\n//           headers: {\r\n//             \"Content-type\": \"application/json\",\r\n//           },\r\n//         };\r\n//         const response = await axios.post(\r\n//           \"http://127.0.0.1:5000/roboWar/auth/login\",\r\n//           { email, password },\r\n//           config\r\n//         );\r\n    \r\n//         toast({\r\n//           title: 'Login Successful',\r\n//           status: 'success',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//       localStorage.setItem(\"userInfo\", JSON.stringify(response.data));\r\n//       } catch (err) {\r\n//         toast({\r\n//           title: 'Error Occurred!',\r\n//           description: err.response.data.message,\r\n//           status: 'error',\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: 'top',\r\n//         });\r\n//       }\r\n//        setLoading(false);\r\n//        navigation('/Main');\r\n//     };\r\n    \r\n\r\n//     return(\r\n//      <>\r\n//         <Container>\r\n//         <Flex color='white'>\r\n//         <Box w='5750px'>\r\n          \r\n//         <FormControl isRequired>\r\n//             <FormLabel>Email</FormLabel>\r\n//         <Input\r\n//         onClick={ding}\r\n//           placeholder=\"Enter your name\"\r\n//           bg={email ? \"gray.50\" : \"white\"}\r\n//           color=\"black\"\r\n//           _hover={{ borderColor: \"black\" }}\r\n//           borderColor=\"black\"\r\n//           onChange={(event) => {\r\n//             setEmail(event.target.value);\r\n//           }}\r\n//           value={email}\r\n//         />\r\n//         </FormControl>\r\n\r\n//         <FormControl id=\"password\" isRequired>\r\n//         <FormLabel>Password</FormLabel>\r\n//         <InputGroup>\r\n//         <Input\r\n//         onClick={ding}\r\n//           placeholder=\"Enter your password\"\r\n//           bg={password ? \"gray.50\" : \"white\"}\r\n//           color=\"black\"\r\n//           _hover={{ borderColor: \"black\" }}\r\n//           borderColor=\"black\"\r\n//           onChange={(event) => {\r\n//             setPassword(event.target.value);\r\n//           }}\r\n//           value={password}\r\n//         />\r\n//         <InputRightElement w=\"4.5em\">\r\n//             <Button h=\"1.75em\" size=\"sm\" onClick={handleClick} color=\"black\">\r\n//               {show ? <ViewOffIcon /> : <ViewIcon />}\r\n//             </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//         </FormControl>\r\n        \r\n//         </Box>\r\n//         </Flex>\r\n        \r\n//         <Button\r\n//         colorScheme=\"teal\"\r\n//         size=\"lg\"\r\n//         margin={'5'}\r\n//         color=\"white\"\r\n//         fontWeight=\"bold\"\r\n//         borderRadius=\"md\"\r\n//         bgGradient=\"linear(to-r, teal.500, green.500)\"\r\n//         _hover={{\r\n//           bgGradient: 'linear(to-r, red.500, yellow.500)',\r\n//         }}\r\n//         style={{ marginTop: 15 }}\r\n//         onClick={() => {\r\n//           ding(); // Play sound effect\r\n//           submitHandler(); // Handle form submission\r\n//         }}\r\n//         isLoading={loading}\r\n//         >\r\n//           Login\r\n//         </Button>\r\n\r\n\r\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\r\n//             <Button fontWeight={'bold'} colorScheme='red' variant='link' onClick={ding}>\r\n//       Forgot Password?\r\n//             </Button>\r\n//             <Button fontWeight={'bold'} colorScheme='blue' variant='outline' onClick={ding}>\r\n//               Help\r\n//             </Button>\r\n//         </Stack>\r\n//         </Container>\r\n//         </>\r\n//         )\r\n//     };\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  useToast,\r\n  InputGroup,\r\n  InputRightElement,\r\n} from '@chakra-ui/react';\r\nimport lightgreenblue from \"./lightgreenblue.png\"\r\n\r\nimport { ViewIcon, ViewOffIcon } from  '@chakra-ui/icons';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nimport clicksound from './Sounds/Click - Sound Effect.mp3'\r\n\r\n  const ding=(e)=>{\r\n    const sound=new Audio(clicksound);\r\n    sound.play();\r\n   }\r\n\r\n  export default function Log(){\r\n    const [password, setPassword] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [email, setEmail] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const toast = useToast();\r\n    const navigat = useNavigate();\r\n    \r\n    const handleClick = () => setShow(!show);\r\n    const submitHandler = async () => {\r\n      setLoading(true);\r\n      if (!email || !password) {\r\n        toast({\r\n          title: 'Please fill all the fields',\r\n          status: 'warning',\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n    \r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        };\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:5000/roboWar/auth/login\",\r\n          { email, password },\r\n          config\r\n        );\r\n        \r\n    \r\n        toast({\r\n          title: 'Login Successful',\r\n          status: 'success',\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n    \r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\r\n      // localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      navigate(\"/Main\");\r\n  \r\n    } catch (err) {\r\n        toast({\r\n          title: 'Error Occurred!',\r\n          description: err.response.data.message,\r\n          // description: err.response ? err.response.data.message : 'Unknown error',\r\n          status: 'error',\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      }\r\n    \r\n      setLoading(false);\r\n      navigation('/Main');\r\n\r\n    };\r\n    \r\n\r\n    return(\r\n        <>\r\n        <Container>\r\n        <Flex color='white'>\r\n        <Box w='5750px'>\r\n          \r\n        <FormControl isRequired>\r\n            <FormLabel>Email</FormLabel>\r\n        <Input\r\n        onClick={ding}\r\n          placeholder=\"Enter your email\"\r\n          bg={email ? \"gray.50\" : \"white\"}\r\n          color=\"black\"\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}\r\n          value={email}\r\n        />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n        <Input\r\n        onClick={ding}\r\n        type={show ? \"text\" : \"password\"}\r\n\r\n          placeholder=\"Enter your password\"\r\n          bg={password ? \"gray.50\" : \"white\"}\r\n          color=\"black\"\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}\r\n          value={password}\r\n        />\r\n        <InputRightElement w=\"4.5em\">\r\n            <Button h=\"1.75em\" size=\"sm\" onClick={handleClick} color=\"black\">\r\n              {show ? <ViewOffIcon /> : <ViewIcon />}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n        </FormControl>\r\n        \r\n        </Box>\r\n        </Flex>\r\n        \r\n        <Button\r\n        colorScheme=\"teal\"\r\n        size=\"lg\"\r\n        margin={'5'}\r\n        color=\"black\"\r\n        fontWeight=\"bold\"\r\n        borderRadius=\"md\"\r\n        bgGradient=\"linear(to-r, teal.500, green.500)\"\r\n        _hover={{\r\n          bgGradient: 'linear(to-r, red.500, yellow.500)',\r\n        }}\r\n        style={{ marginTop: 15 }}\r\n        onClick={() => {\r\n          ding(); // Play sound effect\r\n          submitHandler(); // Handle form submission\r\n        }}\r\n        isLoading={loading}\r\n        >\r\n          Login\r\n        </Button>\r\n        \r\n\r\n\r\n        <Stack direction='row' spacing={4} align='center' margin={'20px'}>\r\n            <Button fontWeight={'bold'} colorScheme='red' variant='link' onClick={ding}>\r\n      Forgot Password?\r\n            </Button>\r\n            <Button fontWeight={'bold'} colorScheme='blue' variant='outline' onClick={ding}>\r\n              Help\r\n            </Button>\r\n        </Stack>\r\n        </Container>\r\n        </>\r\n        )\r\n    };"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,iBAAiB,QACZ,kBAAkB;AACzB,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,SAASC,QAAQ,EAAEC,WAAW,QAAS,kBAAkB;AACzD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAExD,OAAOC,UAAU,MAAM,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,IAAI,GAAEC,CAAC,IA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}