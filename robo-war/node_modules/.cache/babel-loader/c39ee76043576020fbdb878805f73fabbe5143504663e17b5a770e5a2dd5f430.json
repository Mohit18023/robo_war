{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Exit.jsx\",\n  _s = $RefreshSig$();\n// import { Button, ButtonGroup } from '@chakra-ui/react'\n// import {\n//   Modal,\n//   ModalOverlay,\n//   ModalContent,\n//   ModalHeader,\n//   ModalFooter,\n//   ModalBody,\n//   ModalCloseButton,\n// } from '@chakra-ui/react'\n// import { useDisclosure } from '@chakra-ui/react'\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\n// import { useNavigation } from 'react-router-dom';\n\n// const ding=()=>{\n//   const sound = new Audio(clicksound);\n//   sound.play();\n//   }\n\n// export default function Exit(){\n//   const navigate = useNavigation();\n//   const { isOpen, onOpen, onClose } = useDisclosure()\n//               return (\n//                 <>\n//                   <Button colorScheme='teal' \n//                   variant='solid' \n//                   width={100} \n//                   // onClick={onOpen}\n//                   onClick={() => {\n//                     ding(); // Play sound effect\n//                     onOpen(); // Handle form submission\n//                   }}\n//                   >Exit</Button>\n\n//                   <Modal isOpen={isOpen} onClose={onClose}>\n//                     <ModalOverlay />\n//                     <ModalContent>\n//                       <ModalHeader>Exit</ModalHeader>\n//                       <ModalCloseButton />\n//                       <ModalBody>\n//                         Do you want to Exit?\n//                       </ModalBody>\n\n//                       <ModalFooter>\n//                         <Button \n//                         colorScheme='blue' \n//                         mr={3} \n//                         // onClick={onClose}\n//                         onClick={() => {\n//                           ding(); // Play sound effect\n//                           onClose(); // Handle form submission\n//                         }}>\n//                           Yes\n//                         </Button>\n//                         <Button colorScheme='blue' \n//                         mr={3} \n//                         // onClick={ding}\n//                         onClick={() => {\n//                           ding(); // Play sound effect\n//                           onClose(); // Handle form submission\n//                         }}>\n//                         No\n//                         </Button>\n//                       </ModalFooter>\n//                         </ModalContent>\n//                   </Modal>\n//                 </>\n//               )\n\n//           }\n\n// Exit.jsx\n// import { Button, ButtonGroup } from '@chakra-ui/react'\n// import {\n//   Modal,\n//   ModalOverlay,\n//   ModalContent,\n//   ModalHeader,\n//   ModalFooter,\n//   ModalBody,\n//   ModalCloseButton,\n// } from '@chakra-ui/react'\n// import { useDisclosure } from '@chakra-ui/react'\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exit = () => {\n  _s();\n  const navigate = useNavigate(); // Get the navigate function\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const ding = () => {\n    // Your ding function\n    const ding = () => {\n      const sound = new Audio(clicksound);\n      sound.play();\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      variant: \"solid\",\n      width: 100,\n      onClick: () => {\n        ding();\n        onOpen();\n      },\n      children: \"Exit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Do you want to Exit?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: () => {\n              ding();\n              onClose();\n            },\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: () => {\n              ding();\n              onClose();\n            },\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Exit, \"RqfLYVxY6JMIcun7ZQZaBYsLtFw=\", true, function () {\n  return [useNavigate];\n});\n_c = Exit;\nexport default Exit;\nvar _c;\n$RefreshReg$(_c, \"Exit\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Exit","_s","navigate","isOpen","onOpen","onClose","useDisclosure","ding","sound","Audio","clicksound","play","children","Button","colorScheme","variant","width","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","mr","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Exit.jsx"],"sourcesContent":["// import { Button, ButtonGroup } from '@chakra-ui/react'\r\n// import {\r\n//   Modal,\r\n//   ModalOverlay,\r\n//   ModalContent,\r\n//   ModalHeader,\r\n//   ModalFooter,\r\n//   ModalBody,\r\n//   ModalCloseButton,\r\n// } from '@chakra-ui/react'\r\n// import { useDisclosure } from '@chakra-ui/react'\r\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\r\n// import { useNavigation } from 'react-router-dom';\r\n\r\n// const ding=()=>{\r\n//   const sound = new Audio(clicksound);\r\n//   sound.play();\r\n//   }\r\n\r\n// export default function Exit(){\r\n//   const navigate = useNavigation();\r\n//   const { isOpen, onOpen, onClose } = useDisclosure()\r\n//               return (\r\n//                 <>\r\n//                   <Button colorScheme='teal' \r\n//                   variant='solid' \r\n//                   width={100} \r\n//                   // onClick={onOpen}\r\n//                   onClick={() => {\r\n//                     ding(); // Play sound effect\r\n//                     onOpen(); // Handle form submission\r\n//                   }}\r\n//                   >Exit</Button>\r\n            \r\n//                   <Modal isOpen={isOpen} onClose={onClose}>\r\n//                     <ModalOverlay />\r\n//                     <ModalContent>\r\n//                       <ModalHeader>Exit</ModalHeader>\r\n//                       <ModalCloseButton />\r\n//                       <ModalBody>\r\n//                         Do you want to Exit?\r\n//                       </ModalBody>\r\n            \r\n//                       <ModalFooter>\r\n//                         <Button \r\n//                         colorScheme='blue' \r\n//                         mr={3} \r\n//                         // onClick={onClose}\r\n//                         onClick={() => {\r\n//                           ding(); // Play sound effect\r\n//                           onClose(); // Handle form submission\r\n//                         }}>\r\n//                           Yes\r\n//                         </Button>\r\n//                         <Button colorScheme='blue' \r\n//                         mr={3} \r\n//                         // onClick={ding}\r\n//                         onClick={() => {\r\n//                           ding(); // Play sound effect\r\n//                           onClose(); // Handle form submission\r\n//                         }}>\r\n//                         No\r\n//                         </Button>\r\n//                       </ModalFooter>\r\n//                         </ModalContent>\r\n//                   </Modal>\r\n//                 </>\r\n//               )\r\n            \r\n//           }\r\n\r\n\r\n// Exit.jsx\r\n// import { Button, ButtonGroup } from '@chakra-ui/react'\r\n// import {\r\n//   Modal,\r\n//   ModalOverlay,\r\n//   ModalContent,\r\n//   ModalHeader,\r\n//   ModalFooter,\r\n//   ModalBody,\r\n//   ModalCloseButton,\r\n// } from '@chakra-ui/react'\r\n// import { useDisclosure } from '@chakra-ui/react'\r\n// import clicksound from './Sounds/Click - Sound Effect.mp3'\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst Exit = () => {\r\n  const navigate = useNavigate(); // Get the navigate function\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const ding = () => {\r\n    // Your ding function\r\n    const ding=()=>{\r\n        const sound = new Audio(clicksound);\r\n        sound.play();\r\n        }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        colorScheme=\"teal\"\r\n        variant=\"solid\"\r\n        width={100}\r\n        onClick={() => {\r\n          ding();\r\n          onOpen();\r\n        }}\r\n      >\r\n        Exit\r\n      </Button>\r\n\r\n      {/* Rest of your modal code */}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Exit</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            Do you want to Exit?\r\n          </ModalBody>\r\n            \r\n      <ModalFooter>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          mr={3}\r\n          onClick={() => {\r\n            ding();\r\n            onClose();\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          mr={3}\r\n          onClick={() => {\r\n            ding();\r\n            onClose();\r\n          }}\r\n        >\r\n          No\r\n        </Button>\r\n      </ModalFooter>\r\n      </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}