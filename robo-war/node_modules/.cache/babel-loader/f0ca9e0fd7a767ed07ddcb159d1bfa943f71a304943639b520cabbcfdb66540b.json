{"ast":null,"code":"class Sprite {\n  constructor({\n    position\n  }) {\n    this.position = position;\n    // this.velocity = velocity;\n    this.height = 150;\n    this.width = 50;\n    //   this.attackbox = {\n    //     position: {\n    //       x:this.position.x,\n    //       y:this.position.y\n    //     },\n    //     offset,\n\n    //     width: 100 ,\n    //     height: 50\n    //   }\n    //   this.isAttacking = '';\n    //   this.color = color;\n    //   this.health = 100\n  }\n\n  draw(ctx) {\n    //   ctx.fillStyle = this.color;\n    //   ctx.fillRect(this.position.x, this.position.y, 50, this.height);\n    //   //attack box\n    //   if (this.isAttacking) {\n\n    //   ctx.fillStyle = 'green';\n    //   ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\n    // }\n  }\n  update(ctx) {\n    this.draw();\n    // this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\n    // this.attackbox.position.y = this.position.y;\n\n    // this.position.x += this.velocity.x;\n    // this.position.y += this.velocity.y;\n    // if (this.position.y + this.height >= ctx.height) {\n    //   this.velocity.y = 0;\n    //   this.position.y = ctx.height - this.height;\n    // } else {\n    //   this.velocity.y += gravity;\n    // }\n  }\n  // attack() {\n  //   this.isAttacking = true\n  //   setTimeout(() => {\n  //     this.isAttacking = false\n  //   }, 100);\n  // }\n}","map":{"version":3,"names":["Sprite","constructor","position","height","width","draw","ctx","update"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Classes.jsx"],"sourcesContent":["class Sprite {\r\n  constructor({ position }) {\r\n    this.position = position;\r\n    // this.velocity = velocity;\r\n    this.height = 150;\r\n    this.width = 50;\r\n  //   this.attackbox = {\r\n  //     position: {\r\n  //       x:this.position.x,\r\n  //       y:this.position.y\r\n  //     },\r\n  //     offset,\r\n      \r\n  //     width: 100 ,\r\n  //     height: 50\r\n  //   }\r\n  //   this.isAttacking = '';\r\n  //   this.color = color;\r\n  //   this.health = 100\r\n  }\r\n\r\n  draw(ctx) {\r\n  //   ctx.fillStyle = this.color;\r\n  //   ctx.fillRect(this.position.x, this.position.y, 50, this.height);\r\n  //   //attack box\r\n  //   if (this.isAttacking) {\r\n\r\n    \r\n  //   ctx.fillStyle = 'green';\r\n  //   ctx.fillRect(this.attackbox.position.x, this.attackbox.position.y , this.attackbox.width , this.attackbox.height)\r\n  // }\r\n}\r\n\r\n  update(ctx) {\r\n    this.draw();\r\n    // this.attackbox.position.x = this.position.x - this.attackbox.offset.x;\r\n    // this.attackbox.position.y = this.position.y;\r\n\r\n    // this.position.x += this.velocity.x;\r\n    // this.position.y += this.velocity.y;\r\n    // if (this.position.y + this.height >= ctx.height) {\r\n    //   this.velocity.y = 0;\r\n    //   this.position.y = ctx.height - this.height;\r\n    // } else {\r\n    //   this.velocity.y += gravity;\r\n    // }\r\n  }\r\n    // attack() {\r\n    //   this.isAttacking = true\r\n    //   setTimeout(() => {\r\n    //     this.isAttacking = false\r\n    //   }, 100);\r\n    // }\r\n  }"],"mappings":"AAAA,MAAMA,MAAM,CAAC;EACXC,WAAWA,CAAC;IAAEC;EAAS,CAAC,EAAE;IACxB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB;IACA,IAAI,CAACC,MAAM,GAAG,GAAG;IACjB,IAAI,CAACC,KAAK,GAAG,EAAE;IACjB;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEAC,IAAIA,CAACC,GAAG,EAAE;IACV;IACA;IACA;IACA;;IAGA;IACA;IACA;EAAA;EAGAC,MAAMA,CAACD,GAAG,EAAE;IACV,IAAI,CAACD,IAAI,CAAC,CAAC;IACX;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EACE;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}