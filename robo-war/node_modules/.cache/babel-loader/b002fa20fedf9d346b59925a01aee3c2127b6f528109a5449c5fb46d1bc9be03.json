{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Log.jsx\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\n// import { Flex, Spacer } from '@chakra-ui/react'\n// import { Container } from '@chakra-ui/react'\n// import { VisuallyHidden, VisuallyHiddenInput } from '@chakra-ui/react'\n// import {CheckIcon} from '@chakra-ui/icons'\n// import {\n//     FormControl,\n//     FormLabel,\n//     FormErrorMessage,\n//     FormHelperText,\n//     Input,\n//   } from '@chakra-ui/react'\n\n//   const ding=(e)=>{\n//      const sound=new Audio(\"https://www.soundjay.com/misc/sounds/small-bell-ring-01a.mp3\");\n//     sound.play();\n//    }\n\n//   export default function Log(){\n//     const [user,setuser]=useState({\n//     username :\"\",\n//     password:\"\"\n//   })  \n\n//   const handleClick=(e)=>{\n//     e.preventDefault();\n//     axios.post('/roboWar',user)\n//   //   .then((response)=>{\n//   //     console.log(response)\n\n//   // })\n// }\n\n//     return(\n//         <>\n//         <Container>\n//         <Flex color='white'>\n//         <Box w='5750px'>\n//         <FormControl isRequired>\n//             <FormLabel>Username</FormLabel>\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\n\n//             <FormLabel>Password</FormLabel>\n//             <Input placeholder='Password' value={user.password} onChange={(event)=>setuser({...user,password:event.target.value})}/>\n\n//         </FormControl>\n//         </Box>\n//         </Flex>\n\n//         <Button colorScheme='blue' margin={'5'}\n//         onClick={handleClick}\n//         >Login</Button>\n\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\n//             <Button  colorScheme='red' variant='link' >\n//       Forgot Password?\n//             </Button>\n//             <Button colorScheme='blue' variant='outline'>\n//               Help\n//             </Button>\n//         </Stack>\n//         </Container>\n//         </>\n//         )\n//     };\n\nimport { useFormik } from \"formik\";\nimport { Box, Button, Checkbox, Flex, FormControl, FormLabel, Input, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"gray.100\",\n    align: \"center\",\n    justify: \"center\",\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"white\",\n      p: 6,\n      rounded: \"md\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          align: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              variant: \"filled\",\n              onChange: formik.handleChange,\n              value: formik.values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              variant: \"filled\",\n              onChange: formik.handleChange,\n              value: formik.values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"rememberMe\",\n            name: \"rememberMe\",\n            onChange: formik.handleChange,\n            isChecked: formik.values.rememberMe,\n            colorScheme: \"purple\",\n            children: \"Remember me?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"purple\",\n            width: \"full\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useFormik","Box","Button","Checkbox","Flex","FormControl","FormLabel","Input","VStack","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","rememberMe","onSubmit","values","alert","JSON","stringify","bg","align","justify","h","children","p","rounded","handleSubmit","spacing","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","variant","onChange","handleChange","value","isChecked","colorScheme","width","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Log.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\r\n// import { Flex, Spacer } from '@chakra-ui/react'\r\n// import { Container } from '@chakra-ui/react'\r\n// import { VisuallyHidden, VisuallyHiddenInput } from '@chakra-ui/react'\r\n// import {CheckIcon} from '@chakra-ui/icons'\r\n// import {\r\n//     FormControl,\r\n//     FormLabel,\r\n//     FormErrorMessage,\r\n//     FormHelperText,\r\n//     Input,\r\n//   } from '@chakra-ui/react'\r\n\r\n//   const ding=(e)=>{\r\n//      const sound=new Audio(\"https://www.soundjay.com/misc/sounds/small-bell-ring-01a.mp3\");\r\n//     sound.play();\r\n//    }\r\n\r\n//   export default function Log(){\r\n//     const [user,setuser]=useState({\r\n//     username :\"\",\r\n//     password:\"\"\r\n//   })  \r\n\r\n//   const handleClick=(e)=>{\r\n//     e.preventDefault();\r\n//     axios.post('/roboWar',user)\r\n//   //   .then((response)=>{\r\n//   //     console.log(response)\r\n    \r\n//   // })\r\n// }\r\n  \r\n//     return(\r\n//         <>\r\n//         <Container>\r\n//         <Flex color='white'>\r\n//         <Box w='5750px'>\r\n//         <FormControl isRequired>\r\n//             <FormLabel>Username</FormLabel>\r\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\r\n            \r\n            \r\n            \r\n            \r\n//             <FormLabel>Password</FormLabel>\r\n//             <Input placeholder='Password' value={user.password} onChange={(event)=>setuser({...user,password:event.target.value})}/>\r\n            \r\n\r\n            \r\n            \r\n\r\n            \r\n//         </FormControl>\r\n//         </Box>\r\n//         </Flex>\r\n        \r\n//         <Button colorScheme='blue' margin={'5'}\r\n//         onClick={handleClick}\r\n//         >Login</Button>\r\n\r\n//         <Stack direction='row' spacing={4} align='center' margin={'20px'}>\r\n//             <Button  colorScheme='red' variant='link' >\r\n//       Forgot Password?\r\n//             </Button>\r\n//             <Button colorScheme='blue' variant='outline'>\r\n//               Help\r\n//             </Button>\r\n//         </Stack>\r\n//         </Container>\r\n//         </>\r\n//         )\r\n//     };\r\n\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function App() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false\r\n    },\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n  return (\r\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\r\n      <Box bg=\"white\" p={6} rounded=\"md\">\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <VStack spacing={4} align=\"flex-start\">\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"email\">Email Address</FormLabel>\r\n              <Input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n              <Input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                variant=\"filled\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n              />\r\n            </FormControl>\r\n            <Checkbox\r\n              id=\"rememberMe\"\r\n              name=\"rememberMe\"\r\n              onChange={formik.handleChange}\r\n              isChecked={formik.values.rememberMe}\r\n              colorScheme=\"purple\"\r\n            >\r\n              Remember me?\r\n            </Checkbox>\r\n            <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\r\n              Login\r\n            </Button>\r\n          </VStack>\r\n        </form>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}