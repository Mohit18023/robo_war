{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meenal Jain\\\\Desktop\\\\robo_war\\\\robo-war\\\\src\\\\Signup.jsx\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\n// import { Flex } from '@chakra-ui/react'\n// import { Container } from '@chakra-ui/react'\n// import {\n//     FormControl,\n//     FormLabel,\n//     FormErrorMessage,\n//     FormHelperText,\n//     Input,\n//   } from '@chakra-ui/react'\n\n//   export default function Signup(){\n//     const [user,setuser]=useState({\n//       username :\"\",\n//       email:\"\",\n//       createpassword :\"\",\n//       confirmpassword:\"\"\n//     })\n//     const handleClick=(e)=>{\n//       e.preventDefault();\n//       axios.post('/roboWar',user)\n//     }  \n\n//     return(\n//         <>\n//         <Container>\n//           <Flex color='white' align = \"centre\" >\n\n//                 <Box w='650px' >\n//     <FormControl >\n//         <FormLabel> Username</FormLabel>\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\n//             <FormLabel>Email</FormLabel>\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\n//             <FormLabel>Create Password</FormLabel>\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\n\n//             <FormLabel>Confirm Password</FormLabel>\n//             <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\n\n//         </FormControl>\n//   </Box>\n\n// </Flex>\n// </Container>\n\n//         <Button colorScheme='teal' size='lg' margin={'5'}\n//         onClick={handleClick}\n//         >Signup</Button>\n\n//         </>\n//         )\n//     };\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\n// import { Flex } from '@chakra-ui/react'\n// import { Container } from '@chakra-ui/react'\n// import {\n//   FormControl,\n//   FormLabel,\n//   FormErrorMessage,\n//   FormHelperText,\n//   Input,\n// } from '@chakra-ui/react'\n\n// export default function Signup() {\n//   const [user, setuser] = useState({\n//     username: \"\",\n//     email: \"\",\n//     createpassword: \"\",\n//     confirmpassword: \"\"\n//   })\n\n//   const handleClick = (e) => {\n//     e.preventDefault();\n\n//     const headers = {\n//       'Body':'user',\n//       'Content-Type': 'application/json',\n//       'Authorization': 'Bearer YourAccessToken',\n//     };\n\n//     axios.post('/roboWar',{ headers })\n//       .then(response => {\n//         console.log('Response:', response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error:', error);\n//       });\n//   }\n\n//   return (\n//     <>\n//       <Container>\n//         <Flex color='white' align=\"centre\">\n//           <Box w='650px'>\n//           <FormControl >\n//         <FormLabel> Username</FormLabel>\n//         <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\n//              <FormLabel>Email</FormLabel>\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\n//             <FormLabel>Create Password</FormLabel>\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\n\n//            <FormLabel>Confirm Password</FormLabel>\n//            <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\n\n//          </FormControl>\n//           </Box>\n//         </Flex>\n//       </Container>\n\n//       <Button colorScheme='teal' size='lg' margin={'5'} onClick={handleClick}>Signup</Button>\n//     </>\n//   )\n// }\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { Box, Button, Stack } from '@chakra-ui/react';\n// import { Flex } from '@chakra-ui/react';\n// import { Container } from '@chakra-ui/react';\n// import {\n//   FormControl,\n//   FormLabel,\n//   Input,\n// } from '@chakra-ui/react';\n\n// export default function Signup() {\n//   const [user, setUser] = useState({\n//     username: \"\",\n//     email: \"\",\n//     createpassword: \"\",\n//     confirmpassword: \"\"\n//   });\n\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n\n//     // Check if passwords match before making the API call\n//     if (user.createpassword !== user.confirmpassword) {\n//       alert(\"Passwords do not match\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('https://localhost:5000/api/user/signup', user);\n//       // Handle success (e.g., show a success message or redirect)\n//       console.log(\"Signup successful\", response.data);\n//     } catch (error) {\n//       // Handle errors (e.g., show an error message)\n//       console.error(\"Signup failed\", error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Container>\n//         <Flex color='lightyellow' align=\"center\">\n//           <Box w='650px'>\n//             <FormControl>\n//               <FormLabel>Username</FormLabel>\n//               <Input\n//               // bg='white'\n//                 placeholder='Username'\n//                 // bg=\"white\"\n//                 // color=\"black\"\n//                 // _hover={{ borderColor: \"black\" }}\n//                 // borderColor=\"black\"\n//                 bg=\"5C469C\"\n//                 color=\"black\"\n\n//                 value={user.username}\n//                 onChange={(event) => setUser({ ...user, username: event.target.value })}\n//               />\n//               <FormLabel>Email</FormLabel>\n//               <Input\n//               // bg='white'\n//                 placeholder='Email'\n//                 value={user.email}\n//                 onChange={(event) => setUser({ ...user, email: event.target.value })}\n//               />\n//               <FormLabel>Create Password</FormLabel>\n//               <Input\n//               // bg='white'\n//                 type=\"password\"\n//                 placeholder='Must include special symbols like @,#'\n//                 value={user.createpassword}\n//                 onChange={(event) => setUser({ ...user, createpassword: event.target.value })}\n//               />\n//               <FormLabel>Confirm Password</FormLabel>\n//               <Input\n//                 type=\"password\"\n//                 placeholder='Confirm Password'\n//                 // bg='white'\n//                 // _hover={{borderColor:\"black\"}}\n//                 value={user.confirmpassword}\n//                 onChange={(event) => setUser({ ...user, confirmpassword: event.target.value })}\n//               />\n//             </FormControl>\n//           </Box>\n//         </Flex>\n//       </Container>\n\n//       <Button\n//         colorScheme='teal'\n//         size='lg'\n//         margin={'5'}\n//         onClick={handleClick}\n//       >\n//         Signup\n//       </Button>\n//     </>\n//   );\n//   }\n\nimport { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, useToast } from \"@chakra-ui/react\";\nimport { Flex, Spacer } from '@chakra-ui/react';\nimport React, { useState } from \"react\";\n//import { Box } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport { Box, Container, Center } from '@chakra-ui/react';\nimport handleClick from \"@chakra-ui/react\";\n//import { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [show, setShow] = useState(false);\n  const [showconfirm, setShowconfirm] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const handleClick = e => {\n    const sound = new Audio(\"https://www.soundjay.com/misc/sounds/small-bell-ring-01a.mp3\");\n    sound.play();\n  };\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!username || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please fill all the required fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: \"true\",\n        position: \"bottom\"\n      });\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Doesn't match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post('/roboWar', {\n        username,\n        email,\n        password\n      }, config);\n      toast({\n        title: \"Registration successful\",\n        duration: 5000,\n        status: \"success\",\n        isClosable: true,\n        position: \"top\"\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        color: \"yellow\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          w: \"5750px\",\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: \"5px\",\n            color: \"white\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"first-name\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter your name\",\n                bg: username ? \"gray.50\" : \"white\",\n                color: \"black\",\n                _hover: {\n                  borderColor: \"black\"\n                },\n                borderColor: \"black\",\n                onChange: event => {\n                  setName(event.target.value);\n                },\n                value: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter your email\",\n                bg: email ? \"gray.50\" : \"white\",\n                _hover: {\n                  borderColor: \"black\"\n                },\n                borderColor: \"black\",\n                onChange: event => {\n                  setEmail(event.target.value);\n                },\n                value: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"password\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter your password\",\n                bg: password ? \"gray.50\" : \"white\",\n                color: \"black\",\n                _hover: {\n                  borderColor: \"black\"\n                },\n                borderColor: \"black\",\n                onChange: event => {\n                  setPassword(event.target.value);\n                },\n                value: password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"confirm-password\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Enter your password\",\n                  bg: confirmpassword ? \"gray.50\" : \"white\",\n                  color: \"black\",\n                  _hover: {\n                    borderColor: \"black\"\n                  },\n                  borderColor: \"black\",\n                  onChange: event => {\n                    setConfirmpassword(event.target.value);\n                  },\n                  value: confirmpassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              size: \"lg\",\n              margin: '5'\n              // width=\"100%\"\n              ,\n              color: \"white\",\n              fontWeight: \"bold\",\n              borderRadius: \"md\",\n              bgGradient: \"linear(to-r, teal.500, green.500)\",\n              _hover: {\n                bgGradient: 'linear(to-r, red.500, yellow.500)'\n              },\n              style: {\n                marginTop: 15\n              },\n              onClick: submitHandler,\n              isLoading: loading\n              // onClick={handleClick}\n              ,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Signup, \"7BRQbsnFbPNb4FoQXxpuM9Ew02I=\", false, function () {\n  return [useToast];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","VStack","useToast","Flex","Spacer","React","useState","axios","Box","Container","Center","handleClick","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","username","setName","email","setEmail","confirmpassword","setConfirmpassword","password","setPassword","show","setShow","showconfirm","setShowconfirm","loading","setLoading","toast","e","sound","Audio","play","submitHandler","title","status","duration","isClosable","position","config","headers","data","post","localStorage","setItem","JSON","stringify","error","description","response","message","children","color","w","spacing","id","isRequired","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","bg","_hover","borderColor","onChange","event","target","value","colorScheme","size","margin","fontWeight","borderRadius","bgGradient","style","marginTop","onClick","isLoading","_c","$RefreshReg$"],"sources":["C:/Users/Meenal Jain/Desktop/robo_war/robo-war/src/Signup.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\r\n// import { Flex } from '@chakra-ui/react'\r\n// import { Container } from '@chakra-ui/react'\r\n// import {\r\n//     FormControl,\r\n//     FormLabel,\r\n//     FormErrorMessage,\r\n//     FormHelperText,\r\n//     Input,\r\n//   } from '@chakra-ui/react'\r\n\r\n\r\n//   export default function Signup(){\r\n//     const [user,setuser]=useState({\r\n//       username :\"\",\r\n//       email:\"\",\r\n//       createpassword :\"\",\r\n//       confirmpassword:\"\"\r\n//     })\r\n//     const handleClick=(e)=>{\r\n//       e.preventDefault();\r\n//       axios.post('/roboWar',user)\r\n//     }  \r\n\r\n//     return(\r\n//         <>\r\n//         <Container>\r\n//           <Flex color='white' align = \"centre\" >\r\n            \r\n//                 <Box w='650px' >\r\n//     <FormControl >\r\n//         <FormLabel> Username</FormLabel>\r\n//             <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\r\n//             <FormLabel>Email</FormLabel>\r\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\r\n//             <FormLabel>Create Password</FormLabel>\r\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\r\n            \r\n            \r\n            \r\n//             <FormLabel>Confirm Password</FormLabel>\r\n//             <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\r\n            \r\n\r\n            \r\n            \r\n\r\n            \r\n//         </FormControl>\r\n//   </Box>\r\n  \r\n  \r\n  \r\n// </Flex>\r\n// </Container>\r\n        \r\n        \r\n\r\n\r\n\r\n//         <Button colorScheme='teal' size='lg' margin={'5'}\r\n//         onClick={handleClick}\r\n//         >Signup</Button>\r\n\r\n\r\n        \r\n//         </>\r\n//         )\r\n//     };\r\n    \r\n// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { Box, Button, ButtonGroup, Stack } from '@chakra-ui/react'\r\n// import { Flex } from '@chakra-ui/react'\r\n// import { Container } from '@chakra-ui/react'\r\n// import {\r\n//   FormControl,\r\n//   FormLabel,\r\n//   FormErrorMessage,\r\n//   FormHelperText,\r\n//   Input,\r\n// } from '@chakra-ui/react'\r\n\r\n// export default function Signup() {\r\n//   const [user, setuser] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     createpassword: \"\",\r\n//     confirmpassword: \"\"\r\n//   })\r\n\r\n//   const handleClick = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const headers = {\r\n//       'Body':'user',\r\n//       'Content-Type': 'application/json',\r\n//       'Authorization': 'Bearer YourAccessToken',\r\n//     };\r\n\r\n//     axios.post('/roboWar',{ headers })\r\n//       .then(response => {\r\n//         console.log('Response:', response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error:', error);\r\n//       });\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <Container>\r\n//         <Flex color='white' align=\"centre\">\r\n//           <Box w='650px'>\r\n//           <FormControl >\r\n//         <FormLabel> Username</FormLabel>\r\n//         <Input placeholder='Username' value={user.username} onChange={(event)=>setuser({...user,username:event.target.value})}/>\r\n//              <FormLabel>Email</FormLabel>\r\n//             <Input placeholder='Email' value={user.email} onChange={(event)=>setuser({...user,email:event.target.value})}/>\r\n//             <FormLabel>Create Password</FormLabel>\r\n//             <Input placeholder='Must include special symbols like @,# ' value={user.createpassword} onChange={(event)=>setuser({...user,createpassword:event.target.value})}/>\r\n            \r\n            \r\n            \r\n//            <FormLabel>Confirm Password</FormLabel>\r\n//            <Input placeholder='Confirm Password' value={user.confirmpassword} onChange={(event)=>setuser({...user,confirmpassword:event.target.value})}/>\r\n            \r\n\r\n            \r\n            \r\n\r\n            \r\n//          </FormControl>\r\n//           </Box>\r\n//         </Flex>\r\n//       </Container>\r\n\r\n//       <Button colorScheme='teal' size='lg' margin={'5'} onClick={handleClick}>Signup</Button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { Box, Button, Stack } from '@chakra-ui/react';\r\n// import { Flex } from '@chakra-ui/react';\r\n// import { Container } from '@chakra-ui/react';\r\n// import {\r\n//   FormControl,\r\n//   FormLabel,\r\n//   Input,\r\n// } from '@chakra-ui/react';\r\n\r\n// export default function Signup() {\r\n//   const [user, setUser] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     createpassword: \"\",\r\n//     confirmpassword: \"\"\r\n//   });\r\n\r\n//   const handleClick = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Check if passwords match before making the API call\r\n//     if (user.createpassword !== user.confirmpassword) {\r\n//       alert(\"Passwords do not match\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post('https://localhost:5000/api/user/signup', user);\r\n//       // Handle success (e.g., show a success message or redirect)\r\n//       console.log(\"Signup successful\", response.data);\r\n//     } catch (error) {\r\n//       // Handle errors (e.g., show an error message)\r\n//       console.error(\"Signup failed\", error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <Container>\r\n//         <Flex color='lightyellow' align=\"center\">\r\n//           <Box w='650px'>\r\n//             <FormControl>\r\n//               <FormLabel>Username</FormLabel>\r\n//               <Input\r\n//               // bg='white'\r\n//                 placeholder='Username'\r\n//                 // bg=\"white\"\r\n//                 // color=\"black\"\r\n//                 // _hover={{ borderColor: \"black\" }}\r\n//                 // borderColor=\"black\"\r\n//                 bg=\"5C469C\"\r\n//                 color=\"black\"\r\n               \r\n//                 value={user.username}\r\n//                 onChange={(event) => setUser({ ...user, username: event.target.value })}\r\n//               />\r\n//               <FormLabel>Email</FormLabel>\r\n//               <Input\r\n//               // bg='white'\r\n//                 placeholder='Email'\r\n//                 value={user.email}\r\n//                 onChange={(event) => setUser({ ...user, email: event.target.value })}\r\n//               />\r\n//               <FormLabel>Create Password</FormLabel>\r\n//               <Input\r\n//               // bg='white'\r\n//                 type=\"password\"\r\n//                 placeholder='Must include special symbols like @,#'\r\n//                 value={user.createpassword}\r\n//                 onChange={(event) => setUser({ ...user, createpassword: event.target.value })}\r\n//               />\r\n//               <FormLabel>Confirm Password</FormLabel>\r\n//               <Input\r\n//                 type=\"password\"\r\n//                 placeholder='Confirm Password'\r\n//                 // bg='white'\r\n//                 // _hover={{borderColor:\"black\"}}\r\n//                 value={user.confirmpassword}\r\n//                 onChange={(event) => setUser({ ...user, confirmpassword: event.target.value })}\r\n//               />\r\n//             </FormControl>\r\n//           </Box>\r\n//         </Flex>\r\n//       </Container>\r\n\r\n//       <Button\r\n//         colorScheme='teal'\r\n//         size='lg'\r\n//         margin={'5'}\r\n//         onClick={handleClick}\r\n//       >\r\n//         Signup\r\n//       </Button>\r\n//     </>\r\n//   );\r\n//   }\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { Flex, Spacer } from '@chakra-ui/react'\r\nimport React, { useState } from \"react\";\r\n//import { Box } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { Box , Container, Center} from '@chakra-ui/react';\r\nimport handleClick from \"@chakra-ui/react\";\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Signup = () => {\r\n  const [username, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [showconfirm, setShowconfirm] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const handleClick=(e)=>{\r\n    const sound=new Audio(\"https://www.soundjay.com/misc/sounds/small-bell-ring-01a.mp3\");\r\n   sound.play();\r\n  }\r\n  \r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!username || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please fill all the required fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: \"true\",\r\n        position: \"bottom\",\r\n      });\r\n\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Doesn't match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/roboWar',\r\n        { username, email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Registration successful\",\r\n        duration: 5000,\r\n        status: \"success\",\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    \r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n    } \r\n     catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n        <Flex color='yellow'>\r\n        <Box w='5750px'>\r\n   \r\n    \r\n    <VStack spacing=\"5px\" color=\"white\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Username</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter your name\"\r\n          bg={username ? \"gray.50\" : \"white\"}\r\n          color=\"black\"\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n          value={username}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter your email\"\r\n          bg={email ? \"gray.50\" : \"white\"}\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}\r\n          value={email}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n           <Input\r\n          placeholder=\"Enter your password\"\r\n          bg={password ? \"gray.50\" : \"white\"}\r\n          color=\"black\"\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setPassword(event.target.value);\r\n          }}\r\n          value={password}\r\n        />\r\n         </FormControl>\r\n         \r\n\r\n      <FormControl id=\"confirm-password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n          placeholder=\"Enter your password\"\r\n          bg={confirmpassword ? \"gray.50\" : \"white\"}\r\n          color=\"black\"\r\n          _hover={{ borderColor: \"black\" }}\r\n          borderColor=\"black\"\r\n          onChange={(event) => {\r\n            setConfirmpassword(event.target.value);\r\n          }}\r\n          value={confirmpassword}\r\n        />\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n     <Button\r\n        colorScheme=\"teal\"\r\n        size='lg'\r\n        margin={'5'}\r\n        // width=\"100%\"\r\n        color='white'\r\n        fontWeight='bold'\r\n        borderRadius='md'\r\n        bgGradient='linear(to-r, teal.500, green.500)'\r\n        _hover={{\r\n        bgGradient: 'linear(to-r, red.500, yellow.500)',\r\n        }}\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n        // onClick={handleClick}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n\r\n    </Box>\r\n      </Flex>\r\n      </Container>\r\n\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAOA;AACA;;AAIA;AACA;;AAMA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,UAAU,EACVC,iBAAiB,EACjBC,MAAM,EACNC,QAAQ,QACH,kBAAkB;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}